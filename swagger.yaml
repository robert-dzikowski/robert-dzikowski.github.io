swagger: "2.0"
info:
  title: "ISA API"
  version: "1.0.0"
  x-logo:
    url: 'http://dev-api.isasensing.com/images/bg.jpg'
  description: |
    # Introduction
    Welcome to the reference for the ISA REST API! This api provides access to all your telemetry data in ISA plataform. 
    # Access to the API
    If you have a ISA telemetry customer, you already have access to the API but we strogly recommend that you create an API user specifically for making API calls. 
    Don't log in to the Prognos UI with this account.
    # Authentication
    The sessions end point do not require any authentication, anything else will require you to be authenticated. To use the api you must request ISA a api User. 
    After that to become authenticated you will need to create an token from sessions endpoint.
    # Generate a Token
    After you have your API User, you must make a call Sessions to obtain a valid token. This operation requires the following parameters:
    * Email - user email
    * Password - user password
    This wil get you a token to use in every request and a refresh token to be used to refresh the user session.
    # Make Authenticated Requests
    To authenticate subsequent API requests, you must provide a valid token in an HTTP header:
    Authorization:  {token}
    The token periodically expires and you have call the refresh token end point to get another valid token.
    # Pagination
    When calling GET methods, you can request paginated data by passing page, pageSize as query parameters. If you don't set this parameter the API will return one page with 500 rows max.

    <!-- ReDoc-Inject: <security-definitions> -->
  termsOfService: "https://api.isasensing.com/terms/"
  contact:
    email: "apiteam@isasensing.com"
host: "dev-api.isasensing.com"
basePath: "/api/v1"
schemes:
- "https"
x-servers:
  - url: //api.isasensing/v2
    description: Default server
  - url: //api.isasensing/sandbox
    description: Sandbox serve
securityDefinitions:
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
paths:
  /api/aggregationtypes:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/AggregationTypeDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '500':
          description: Unknown Error.
      tags:
        - aggregationtypes
      operationId: GetAggregationTypes
      summary: Returns a collection of AggregationTypeDTO
  /api/alarms:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/AlarmDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - alarms
      description: Request criteria is applicable.
      operationId: GetAlarms
      summary: Returns a collection with all alarms associated to the logged user.
    post:
      parameters:
        - description: Body parameter
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AlarmDTO'
      responses:
        '200':
          description: OK
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - alarms
      description: Request criteria is applicable.
      operationId: CreateAlarm
      summary: Creates a new alarm.
      x-code-samples:
        - lang: 'C#'
          source: |
            PetStore.v1.Pet pet = new PetStore.v1.Pet();
            pet.setApiKey("your api key");
            pet.petType = PetStore.v1.Pet.TYPE_DOG;
            pet.name = "Rex";
            // set other fields
            PetStoreResponse response = pet.create();
            if (response.statusCode == HttpStatusCode.Created)
            {
              // Successfully created
            }
            else
            {
              // Something wrong -- check response for errors
              Console.WriteLine(response.getRawResponse());
            }
        - lang: PHP
          source: |
            $form = new \PetStore\Entities\Pet();
            $form->setPetType("Dog");
            $form->setName("Rex");
            // set other fields
            try {
                $pet = $client->pets()->create($form);
            } catch (UnprocessableEntityException $e) {
                var_dump($e->getErrors());
            }
  /settingsCategories:
    get:
      tags:
      - "settings"
      summary: "Get list of settings Categories"
      description: "This can only be done by the logged in user."
      operationId: "getSettingCategories"
      produces:
      - "application/json"
      security:
        - api_key: []
      responses:
        200:
          description: "successful operation"
          schema:
            type: array
            items:
                $ref: "#/definitions/SettingCategoryDTO"
      x-code-samples:
        - lang: 'C#'
          source: |
            settingsCategories category = new settingsCategories();
            // set other fields
            Response response = category.create();
            if (response.statusCode == HttpStatusCode.Created)
            {
              // Successfully created
            }
            else
            {
              // Something wrong -- check response for errors
              Console.WriteLine(response.getRawResponse());
            }|
  /settings/{categoryId}:
    get:
      tags:
      - "settings"
      summary: "Get list of settings by category id"
      description: "This can only be done by the logged in user."
      operationId: "getSettingByCategoryId"
      produces:
      - "application/json"
      parameters:
      - name: "categoryId"
        in: "path"
        description: "The id that needs to be fetched. "
        required: true
        type: "integer"
      security:
        - api_key: []
      responses:
        200:
          description: "successful operation"
          schema:
            type: array
            items:
              $ref: "#/definitions/SettingDTO"
        400:
          description: "Invalid id supplied"
        404:
          description: "Category not found"
  /user/{userId}/settings:
    get:
      tags:
      - "users"
      summary: "Get list of User settings by id"
      description: "This can only be done by the logged in user."
      operationId: "getUserSettingByUserId"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "The id that needs to be fetched. Use user1 for testing. "
        required: true
        type: "integer"
      security:
        - api_key: []
      responses:
        200:
          description: "successful operation"
          schema:
            type: array
            items:
              $ref: "#/definitions/UserSetting"
        400:
          description: "Invalid id supplied"
        404:
          description: "User not found"
    post:
      tags:
      - "users"
      summary: "Create new user setting"
      description: "This can only be done by the logged in user."
      operationId: "createUserSetting"
      consumes:
      - application/json
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "user id that needs to be used to create a new setting"
        required: true
        type: "integer"
      - in: "body"
        name: "body"
        description: "Updated setting object"
        required: true
        schema:
          $ref: "#/definitions/UserSetting"
      security:
        - api_key: []
      responses:
        400:
          description: "Invalid setting supplied"
        404:
          description: "Setting not found"
  /user/{userId}/settings/{settingId}:
    get:
      tags:
      - "users"
      summary: "Get of User setting by id"
      description: "This can only be done by the logged in user."
      operationId: "getUserSettingById"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "The id that needs to be fetched.  "
        required: true
        type: "integer"
      - name: "settingId"
        in: "path"
        description: "The id that needs to be fetched. "
        required: true
        type: "integer"
      security:
        - api_key: []
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/UserSetting"
        400:
          description: "Invalid id supplied"
        404:
          description: "User not found"
    put:
      tags:
      - "users"
      summary: "Updated user setting"
      description: "This can only be done by the logged in user."
      operationId: "updateUserSetting"
      consumes:
      - application/json
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "The id that needs to be fetched. "
        required: true
        type: "string"
      - name: "settingId"
        in: "path"
        description: "id that need to be updated"
        required: true
        type: "integer"
      - in: "body"
        name: "body"
        description: "Updated user Setting object"
        required: true
        schema:
          $ref: "#/definitions/UserSetting"
      security:
        - api_key: []
      responses:
        400:
          description: "Invalid setting supplied"
        404:
          description: "Setting not found"
    delete:
      tags:
      - "users"
      summary: "Delete user setting"
      description: "This can only be done by the logged in user."
      operationId: "deleteUserSetting"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "The id that needs to be deleted"
        required: true
        type: "string"
      - name: "settingId"
        in: "path"
        description: "The id that needs to be fetched. Use user1 for testing. "
        required: true
        type: "integer"
      security:
        - api_key: []
      responses:
        400:
          description: "Invalid id supplied"
        404:
          description: "User not found"
  /api/alarms/active:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/AlarmOccurrenceDTO'
            type: array
        '400':
          description: Request has missing data or data is not in the correct format.
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - alarms
      operationId: GetAlarmsActive
      summary: Returns a collection of active alarms
  /api/alarms/conditions:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/AlarmConditionDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - alarms
      operationId: GetAlarmConditions
      summary: Get all available alarm conditions.
  /api/alarms/fields:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/AlarmFieldDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '500':
          description: Unknown Error.
      tags:
        - alarms
      operationId: GetAlarmFields
      summary: Returns a collection of AlarmFieldDTOs
  '/api/alarms/notificationmessages/{id}':
    delete:
      parameters:
        - default: 0
          description: The notification message Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
        '204':
          description: Notification message deleted successfully.
        '400':
          description: Invalid parameters
        '404':
          description: Notification message not found for the given Id.
      tags:
        - alarms
      description: Request criteria is NOT applicable.
      operationId: DeleteAlarmNotificationMessage
      summary: Delete a notification message for the given id.
    get:
      parameters:
        - default: 0
          description: The Notification Message Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AlarmNotificationMessageDTO'
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Notification Message not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - alarms
      description: Request criteria is NOT applicable.
      operationId: GetAlarmNotificationMessage
      summary: Returns a Notification Message by id
    put:
      parameters:
        - default: 0
          description: The notification message id
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: A notification message to be updated.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AlarmNotificationMessageDTO'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/AlarmNotificationMessageDTO'
        '204':
          description: Notification message updated successfully.
        '400':
          description: Invalid parameters
        '404':
          description: Notification message not found for the given Id.
      tags:
        - alarms
      description: Request criteria is NOT applicable.
      operationId: UpdateAlarmNotificationMessage
      summary: Updates a notification message for the given id.
  /api/alarms/outputtypes:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/AlarmOutputTypeDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - alarms
      operationId: GetAlarmOutputTypes
      summary: Get all available alarm output types.
  /api/alarms/shortcodes:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/AlarmMessageShortCodeDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - alarms
      operationId: GetAlarmShortCodes
      summary: Get alarm short codes list.
  /api/alarms/subscribers:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/AlarmSubscriberDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - alarms
      operationId: GetAlarmSubscribers
      summary: Get alarm subscribers list.
    post:
      parameters:
        - description: Body parameter
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AlarmSubscriberDTO'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AlarmSubscriberDTO'
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - alarms
      description: Request criteria is applicable.
      operationId: CreateAlarmSubscriber
      summary: Creates a new alarm subscribers list.
  '/api/alarms/subscribers/{id}':
    delete:
      parameters:
        - default: 0
          description: The alarm subscribers list Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
        '204':
          description: Alarm alarm subscribers list deleted successfully.
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Alarm alarm subscribers list not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - alarms
      description: Request criteria is NOT applicable.
      operationId: DeleteAlarmSubscriber
      summary: Delete an alarm subscribers list for the given id.
    get:
      parameters:
        - default: 0
          description: The alarm subscriber list Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AlarmSubscriberDTO'
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Alarm subscriber list not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - alarms
      description: Request criteria is NOT applicable.
      operationId: GetAlarmSubscriber
      summary: Returns an alarm subscriber list by id
    put:
      parameters:
        - default: 0
          description: The alarm subscribers list Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: An alarm subscribers list to be updated.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AlarmSubscriberDTO'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/AlarmSubscriberDTO'
        '204':
          description: Alarm subscribers list updated successfully.
        '400':
          description: Invalid parameters
        '404':
          description: Alarm subscribers list not found for the given Id.
      tags:
        - alarms
      description: Request criteria is NOT applicable.
      operationId: UpdateAlarmSubscriber
      summary: Updates an alarm subscribers list for the given id.
  '/api/alarms/{alarmId}/occurrences':
    get:
      parameters:
        - default: 0
          description: The alarm Id
          format: int32
          in: path
          name: alarmId
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/AlarmOccurrenceDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - alarms
      operationId: GetAlarmHistory
      summary: Get all available alarm occurrences.
  '/api/alarms/{id}/subscribers/available/outputtype/{outputtypeid}':
    get:
      parameters:
        - default: 0
          description: The Alarm Id.
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - default: 0
          description: The AlarmOutputType Id.
          format: int32
          in: path
          name: outputtypeid
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/AlarmSubscriberDTO'
            type: array
        '400':
          description: BadRequest
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Alarm output type not found for the given outputtypeid.
        '500':
          description: Unknown Error.
      tags:
        - alarms
      description: Request criteria is applicable.
      operationId: GetAlarmSubscribersAvailable
      summary: Get subscribers available for given group alarm.
  '/api/alarms/{id}':
    delete:
      parameters:
        - default: 0
          description: The alarm Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
        '204':
          description: Alarm deleted successfully.
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Alarm not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - alarms
      description: Request criteria is NOT applicable.
      operationId: DeleteAlarm
      summary: Delete a alarm for the given id.
    get:
      parameters:
        - default: 0
          description: The Alarm Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AlarmDTO'
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Alarm not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - alarms
      description: Request criteria is NOT applicable.
      operationId: GetAlarmById
      summary: Returns a Alarm by id
    put:
      parameters:
        - default: 0
          description: The alarm Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: A alarm to be updated.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AlarmDTO'
      responses:
        '200':
          description: No response was specified
          schema:
            items:
              $ref: '#/definitions/AlarmDTO'
            type: array
        '204':
          description: Alarm updated successfully.
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Alarm not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - alarms
      description: Request criteria is NOT applicable.
      operationId: UpdateAlarm
      summary: Updates a alarm for the given id.
  '/api/alarms/{id}/notificationmessages':
    get:
      parameters:
        - default: 0
          description: The alarm Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/AlarmNotificationMessageDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - alarms
      operationId: GetAlarmNotificationMessages
      summary: Get alarm notification messages list.
    post:
      parameters:
        - default: 0
          description: The alarm id to be associated this notification message
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: Body parameter
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AlarmNotificationMessageDTO'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AlarmNotificationMessageDTO'
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - alarms
      description: Request criteria is applicable.
      operationId: CreateAlarmNotificationMessage
      summary: Creates a new alarm notification message.
  /api/commands/reprocess:
    post:
      parameters:
        - description: Body parameter
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/MessageReprocessCommand'
      responses:
        '200':
          description: OK
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - commands
      description: Request criteria is applicable.
      operationId: SendReprocessCommand
      summary: Sends a new command for the cluster.
  /api/commands/sms:
    delete:
      parameters:
        - description: Body parameter
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ProtocolCommandDTO'
      responses:
        '200':
          description: No response was specified
        '204':
          description: NoContent
      tags:
        - commands
      description: Request criteria is applicable.
      operationId: DeleteSmsCommand
      summary: Deletes a given command.
    post:
      parameters:
        - description: Body parameter
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ProtocolCommandDTO'
      responses:
        '200':
          description: OK
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - commands
      description: Request criteria is applicable.
      operationId: SendSmsCommand
      summary: Sends a new command for the cluster.
    put:
      parameters:
        - description: Body parameter
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ProtocolCommandDTO'
      responses:
        '200':
          description: OK
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - commands
      description: Request criteria is applicable.
      operationId: UpdateSmsCommand
      summary: Updates a existing command for the cluster.
  /api/companies:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/CompanyDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - companies
      description: Request criteria is applicable.
      operationId: GetCompanies
      summary: Returns a collection with all Companies associated to the logged user.
    post:
      parameters:
        - description: A company to be created.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CompanyDTO'
      responses:
        '200':
          description: No response was specified
          schema:
            items:
              $ref: '#/definitions/CompanyDTO'
            type: array
        '201':
          description: Company created successfully.
        '400':
          description: Invalid parameters.
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - companies
      description: Request criteria is NOT applicable.
      operationId: CreateCompany
      summary: Creates a new company .
  '/api/companies/{id}':
    delete:
      parameters:
        - default: 0
          description: The company Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
          schema:
            items:
              $ref: '#/definitions/CompanyDTO'
            type: array
        '204':
          description: Company deleted successfully.
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Compnay not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - companies
      description: Request criteria is NOT applicable.
      operationId: DeleteCompany
      summary: >-
        Deletes a company for the given id, only if it is not associated to
        another entity.
    get:
      parameters:
        - default: 0
          description: The Company Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CompanyDTO'
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Company not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - companies
      description: Request criteria is NOT applicable.
      operationId: GetCompany
      summary: Returns a Company by id
    put:
      parameters:
        - default: 0
          description: The company Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: A company to be updated.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CompanyDTO'
      responses:
        '200':
          description: No response was specified
          schema:
            items:
              $ref: '#/definitions/CompanyDTO'
            type: array
        '204':
          description: Company updated successfully.
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Company not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - companies
      description: Request criteria is NOT applicable.
      operationId: UpdateCompany
      summary: Updates a company for the given id.
  '/api/companies/{id}/users':
    get:
      parameters:
        - default: 0
          description: The company Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/UserDTO'
            type: array
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Company not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - companies
      description: Request criteria is applicable.
      operationId: GetCompanyUsers
      summary: Returns a collection of users for given company.
  /api/consumers/types:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/ConsumerTypeDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - consumers
      operationId: GetConsumerTypes
      summary: Get all available consumer app types.
  '/api/consumers/{consumerTypeId}':
    get:
      parameters:
        - default: 0
          description: The consumer app type id
          format: int32
          in: path
          name: consumerTypeId
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            type: string
        '400':
          description: 'The {id} is lower than 0.'
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: The consumer data was not found for the given user and provider id.
        '500':
          description: Unknown Error.
      tags:
        - consumers
      operationId: GetConsumerData
      summary: Gets the data from the consumer app type for the context user
    put:
      parameters:
        - default: 0
          description: The consumer type id
          format: int32
          in: path
          name: consumerTypeId
          required: true
          type: integer
        - description: The data string to update
          in: body
          name: body
          required: true
          schema:
            type: string
      responses:
        '200':
          description: No response was specified
          schema:
            type: string
        '204':
          description: Consumer updated successfully
        '400':
          description: 'The {id} is lower than 0.'
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: The consumer data was not found for the given user and provider id.
        '500':
          description: Unknown Error.
      tags:
        - consumers
      operationId: UpdateConsumerData
      summary: Updates data from the consumer type for the context user
  /api/countries:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/CountryDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - countries
      description: Request criteria is applicable.
      operationId: GetCountries
      summary: Returns a collection with all Countries associated to the logged user.
  /api/customers:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/CustomerDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - customers
      description: Request criteria is applicable.
      operationId: GetCustomers
      summary: Returns a collection of customers.
    post:
      parameters:
        - description: The Customer object
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CustomerDTO'
      responses:
        '200':
          description: No response was specified
          schema:
            items:
              $ref: '#/definitions/CustomerDTO'
            type: array
        '201':
          description: Customer created successfully
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - customers
      operationId: CreateCustomers
      summary: Creates a new Customer.
  '/api/customers/{id}':
    delete:
      parameters:
        - default: 0
          description: The Customer Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
        '204':
          description: Customer deleted successful
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Customer not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - customers
      operationId: DeleteCustomer
      summary: Deletes a Customer
    get:
      parameters:
        - default: 0
          description: The Customer Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CustomerDTO'
        '400':
          description: Invalid parameters.
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Customer not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - customers
      description: Request criteria is NOT applicable.
      operationId: GetCustomer
      summary: Returns a Customer by id
    put:
      parameters:
        - default: 0
          description: The Customer Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: A Customer to update
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CustomerDTO'
      responses:
        '200':
          description: No response was specified
        '204':
          description: Customer updated successful
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Customer not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - customers
      operationId: UpdateCustomer
      summary: Updates a Customer
  '/api/datum/tags/{tagId}':
    get:
      parameters:
        - default: 0
          description: The Tag Id
          format: int32
          in: path
          name: tagId
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/DatumDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - datum
      description: Request criteria is applicable.
      operationId: GetDatum
      summary: Returns a collection of Datum
  '/api/datum/tags/{tagId}/export':
    get:
      parameters:
        - default: 0
          description: The Tag Id
          format: int32
          in: path
          name: tagId
          required: true
          type: integer
      responses:
        '200':
          description: OK
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - datum
      description: Request criteria is applicable.
      operationId: GetDatumExport
      summary: Returns a file with a collection of Datum
  '/api/datum/tags/{tagId}/reaggregate':
    put:
      parameters:
        - default: 0
          description: The Tag Id
          format: int32
          in: path
          name: tagId
          required: true
          type: integer
      responses:
        '200':
          description: OK
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - datum
      description: Request criteria is applicable.
      operationId: ReaggregateDatumForTag
      summary: Re-aggregated the datum for a tag
  '/api/datum/tags/{tagId}/recalibrate':
    put:
      parameters:
        - default: 0
          description: The Tag Id
          format: int32
          in: path
          name: tagId
          required: true
          type: integer
      responses:
        '200':
          description: OK
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - datum
      description: Request criteria is applicable.
      operationId: RecalibrateDatumForTag
      summary: Re-calibrate the datum for a tag
  '/api/datum/tags/{tagId}/validations':
    get:
      parameters:
        - default: 0
          description: The Tag Id
          format: int32
          in: path
          name: tagId
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/RawDataDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - datum
      description: Request criteria is applicable.
      operationId: GetDataToValidate
      summary: Returns a collection of RawDataDTO
    put:
      parameters:
        - description: Body parameter
          in: body
          name: body
          schema: {}
        - default: 0
          description: The Tag Id
          format: int32
          in: path
          name: tagId
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/RawDataDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - datum
      description: Request criteria is applicable.
      operationId: UpdateValidatedData
      summary: Returns a collection of RawDataDTO
  '/api/datum/tags/{tagId}/validations/export':
    get:
      parameters:
        - default: 0
          description: The Tag Id
          format: int32
          in: path
          name: tagId
          required: true
          type: integer
      responses:
        '200':
          description: OK
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - datum
      description: Request criteria is applicable.
      operationId: GetDataToValidateExport
      summary: Returns a file with a collection of RawDataDTO
  /api/datum/validations/stats:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/ValidationStatsDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - datum
      description: Request criteria is applicable.
      operationId: GetValidationStats
      summary: Returns a collection of ValidationStatsDTO
  /api/devices:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/DeviceDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - devices
      description: Request criteria is applicable.
      operationId: GetDevices
      summary: Returns a collection of Devices.
    post:
      parameters:
        - description: A Device to create
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeviceDTO'
      responses:
        '200':
          description: No response was specified
          schema:
            items:
              $ref: '#/definitions/DeviceDTO'
            type: array
        '201':
          description: Device created successfully
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - devices
      operationId: CreateDevice
      summary: Creates a new device
  /api/devices/status:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/DeviceStatusDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - devices
      operationId: GetDeviceStatus
      summary: Get all device status.
  '/api/devices/{DeviceId}/configurations/{configurationId}':
    delete:
      parameters:
        - default: 0
          description: The Device Id
          format: int32
          in: path
          name: DeviceId
          required: true
          type: integer
        - default: 0
          description: The ConfigurationId type Id
          format: int32
          in: path
          name: configurationId
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
        '204':
          description: Configuration deleted successfully
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - devices
      operationId: DeleteDeviceConfiguration
      summary: Delete Device  configuration
  '/api/devices/{id}':
    delete:
      parameters:
        - default: 0
          description: The Device Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
        '204':
          description: NoContent
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Device not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - devices
      operationId: DeleteDevice
      summary: Returns a Device by id
    get:
      parameters:
        - default: 0
          description: The Device Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DeviceDTO'
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Device not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - devices
      description: Request criteria is NOT applicable.
      operationId: GetDevice
      summary: Returns a Device by id
    put:
      parameters:
        - default: 0
          description: The Device Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: A Device (tank/deposito) to update
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeviceDTO'
      responses:
        '200':
          description: No response was specified
        '204':
          description: Device updated successfuly
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Device not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - devices
      operationId: UpdateDevice
      summary: Updates a device
  '/api/devices/{id}/configurations':
    get:
      parameters:
        - default: 0
          description: The Device Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/ConfigurationDeviceDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Configuration not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - devices
      description: Request criteria is applicable.
      operationId: GetDeviceConfigurations
      summary: Returns an array of Device configurations.
    post:
      parameters:
        - default: 0
          description: The Device Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: A Configurations to create
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ConfigurationDeviceDTO'
      responses:
        '200':
          description: No response was specified
          schema:
            items:
              $ref: '#/definitions/ConfigurationDeviceDTO'
            type: array
        '201':
          description: Configurations created successfully
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - devices
      operationId: CreateDeviceConfigurations
      summary: Create a new array of configurations
    put:
      parameters:
        - default: 0
          description: The Device Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: A Configurations to update
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ConfigurationDeviceDTO'
      responses:
        '200':
          description: No response was specified
        '204':
          description: Configurations updated successfully
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - devices
      description: Request criteria is applicable.
      operationId: UpdateDeviceConfigurations
      summary: Update the configurations
  '/api/devices/{id}/tags':
    get:
      parameters:
        - default: 0
          description: The Device Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/TagDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Device not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - devices
      operationId: GetDeviceTags
      summary: Returns a Device's Tags.
  /api/devicetypes:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/DeviceTypeDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - devicetypes
      operationId: GetDeviceTypes
      summary: Get all device types.
    post:
      parameters:
        - description: A Device Type to be created.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeviceTypeDTO'
      responses:
        '200':
          description: No response was specified
          schema:
            items:
              $ref: '#/definitions/DeviceTypeDTO'
            type: array
        '201':
          description: Device Type created successfully.
        '400':
          description: Invalid parameters.
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - devicetypes
      description: Request criteria is NOT applicable.
      operationId: CreateDeviceType
      summary: Creates a new Device Type.
  /api/devicetypes/groups:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/DeviceTypeGroupDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - devicetypes
      description: Request criteria is applicable.
      operationId: GetDeviceTypeGroups
      summary: Returns a collection of Device Type Groups
  '/api/devicetypes/groups/{id}':
    get:
      parameters:
        - default: 0
          description: The Device Type Group Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/DeviceTypeGroupDTO'
            type: array
        '400':
          description: Invalid parameters.
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Device Type Group not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - devicetypes
      description: Request criteria is NOT applicable.
      operationId: GetDeviceTypeGroup
      summary: Returns a Device Type Group by id.
  '/api/devicetypes/{id}':
    delete:
      parameters:
        - default: 0
          description: The Device Type Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
          schema:
            items:
              $ref: '#/definitions/DeviceTypeDTO'
            type: array
        '204':
          description: Device Type deleted successfully.
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Device Type not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - devicetypes
      description: Request criteria is NOT applicable.
      operationId: DeleteDeviceType
      summary: >-
        Deletes a Device Type for the given id, only if it is not associated to
        another entity.
    get:
      parameters:
        - default: 0
          description: The Device Type Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DeviceTypeDTO'
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Device Type not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - devicetypes
      description: Request criteria is NOT applicable.
      operationId: GetDeviceType
      summary: Returns a Device Type by id
    put:
      parameters:
        - default: 0
          description: The Device Type Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: A Device Type to be updated.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeviceTypeDTO'
      responses:
        '200':
          description: No response was specified
          schema:
            items:
              $ref: '#/definitions/DeviceTypeDTO'
            type: array
        '204':
          description: Device Type updated successfully.
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Device Type not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - devicetypes
      description: Request criteria is NOT applicable.
      operationId: UpdateDeviceType
      summary: Updates a Device Type for the given id.
  /api/errorcodes:
    get:
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ErrorCodeDTO'
        '401':
          description: Authorization token missing or invalid.
        '500':
          description: Unknown Error.
      tags:
        - errorcodes
      operationId: GetErrorCodes
      summary: Returns a collection of ErrorCodeDTOs
  '/api/errorcodes/{id}':
    get:
      parameters:
        - default: 0
          description: The ErrorCode Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ErrorCodeDTO'
        '401':
          description: Authorization token missing or invalid.
        '500':
          description: Unknown Error.
      tags:
        - errorcodes
      operationId: GetErrorCode
      summary: Returns an ErrorCode by id
  /api/fieldoperations:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/FieldOperationDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - fieldoperations
      description: Request criteria is applicable.
      operationId: GetFieldOperations
      summary: Returns a collection of Field Operations.
  /api/fieldoperations/me:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/FieldOperationDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - fieldoperations
      description: Request criteria is NOT applicable.
      operationId: GetUserFieldOperations
      summary: Returns a collection of users's Field Operations.
  /api/fieldoperations/reject:
    put:
      parameters:
        - description: The ids of Field Operations to be rejected
          in: body
          name: body
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '200':
          description: No response was specified
          schema:
            items:
              format: int32
              type: integer
            type: array
        '204':
          description: Field Operations updated successful
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid
        '404':
          description: FieldOpertion not found for the given Id.
      tags:
        - fieldoperations
      operationId: FieldOperationsReject
      summary: Update fieldOperation's status to Open for given fieldOperation ids
  /api/fieldoperations/status:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/FieldOperationStatusDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - fieldoperations
      description: Request criteria is applicable.
      operationId: GetFieldOperationStatus
      summary: Returns a collection of Field Operation Status.
  /api/fieldoperations/synced:
    put:
      parameters:
        - description: The ids of Field Operations to be changed
          in: body
          name: body
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '200':
          description: No response was specified
          schema:
            items:
              format: int32
              type: integer
            type: array
        '204':
          description: Field Operations updated successful
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid
        '404':
          description: FieldOpertion not found for the given Id.
      tags:
        - fieldoperations
      operationId: FieldOperationsSynced
      summary: Update fieldOperation's status to Sync for given fieldOperation ids
  '/api/fieldoperations/{id}':
    get:
      parameters:
        - default: 0
          description: The Field operation Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FieldOperationDTO'
        '400':
          description: Invalid parameters.
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Field Operation not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - fieldoperations
      description: Request criteria is NOT applicable.
      operationId: GetFieldOperation
      summary: >-
        Returns a field operation for the given id. if the user has access
        (Secured select not implemented yet)
    put:
      parameters:
        - default: 0
          description: The Field Operation Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: A Site object
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/FieldOperationDTO'
      responses:
        '200':
          description: Field Operation updated successfully.
        '400':
          description: Invalid parameters.
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Field Operation not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - fieldoperations
      description: Request criteria is NOT applicable.
      operationId: UpdateFieldOperation
      summary: >-
        Updates a field operation for the given id, if the user has access
        (Secured select not implemented yet)
  '/api/fieldoperations/{id}/cancel':
    post:
      parameters:
        - default: 0
          description: The Field Operation Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: A Site State History object
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SiteStatusHistoryDTO'
      responses:
        '200':
          description: Field Operation canceled successfully.
        '400':
          description: Invalid parameters.
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Field Operation not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - fieldoperations
      description: Request criteria is NOT applicable.
      operationId: CancelFieldOperation
      summary: >-
        Cancel the field operation and applies a status transition to the given
        site.
  '/api/fieldoperations/{id}/close':
    put:
      parameters:
        - default: 0
          description: The Field Operation Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: A Field Operation object
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/FieldOperationDTO'
      responses:
        '200':
          description: FIELD_OPERATION_CLOSED_WITH_SUCCESS
        '400':
          description: Invalid parameters.
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Field Operation not found for the given Id.
        '410':
          description: FIELD_OPERATION_CLOSED_BY_OTHER_USER
        '500':
          description: Unknown Error.
      tags:
        - fieldoperations
      description: Request criteria is NOT applicable.
      operationId: CloseFieldOperation
      summary: Closes the field operation for the given Id
  '/api/fieldoperations/{id}/history':
    get:
      parameters:
        - default: 0
          description: The Field operation Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FieldOperationHistoryDTO'
        '400':
          description: Invalid parameters.
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Field Operation not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - fieldoperations
      description: Request criteria is NOT applicable.
      operationId: GetFieldOperationHistory
      summary: >-
        Returns a field operation history for the given id. if the user has
        access (Secured select not implemented yet)
  '/api/fieldoperations/{id}/invalidate':
    post:
      parameters:
        - default: 0
          description: The Field Operation Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
        '201':
          description: Field Operation invalidated successfully.
        '400':
          description: Invalid parameters.
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Field Operation not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - fieldoperations
      description: Request criteria is NOT applicable.
      operationId: InvalidateFieldOperationAndCreate
      summary: >-
        Invalidate the field operation and create new field operation of type
        maintenance
    put:
      parameters:
        - default: 0
          description: The Field Operation Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
        '204':
          description: Field Operation invalidated successfully.
        '400':
          description: Invalid parameters.
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Field Operation not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - fieldoperations
      description: Request criteria is NOT applicable.
      operationId: InvalidateFieldOperation
      summary: Invalidates the field operation
  '/api/fieldoperations/{id}/materials':
    get:
      parameters:
        - default: 0
          description: The Field operation Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MaterialDTO'
        '400':
          description: Invalid parameters.
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Field Operation not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - fieldoperations
      description: Request criteria is NOT applicable.
      operationId: GetFieldOperationMaterials
      summary: >-
        Returns materials for the given field operation id. if the user has
        access (Secured select not implemented yet)
  '/api/fieldoperations/{id}/photos':
    get:
      parameters:
        - default: 0
          description: The Field operation Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FieldOperationPhotoDTO'
        '400':
          description: Invalid parameters.
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Field Operation not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - fieldoperations
      description: Request criteria is NOT applicable.
      operationId: GetFieldOperationPhotos
      summary: >-
        Returns a link for photos for the given field operation id. if the user
        has access (Secured select not implemented yet)
    post:
      parameters:
        - default: 0
          description: The Field operation Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: Photo file
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/HttpFile'
      responses:
        '200':
          description: No response was specified
        '204':
          description: PHOTO_UPLOADED_WITH_SUCCESS
        '400':
          description: Invalid parameters.
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Field Operation not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - fieldoperations
      description: Request criteria is NOT applicable.
      operationId: PostPhoto
      summary: Uploads the photo to given field operation id
  '/api/fieldoperations/{id}/validate':
    put:
      parameters:
        - default: 0
          description: The Field Operation Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
        '204':
          description: Field Operation validated successfully.
        '400':
          description: Invalid parameters.
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Field Operation not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - fieldoperations
      description: Request criteria is NOT applicable.
      operationId: ValidateFieldOperation
      summary: Validates the field operation
  '/api/fieldoperations/{siteId}':
    post:
      parameters:
        - default: 0
          description: The Site Id
          format: int32
          in: path
          name: siteId
          required: true
          type: integer
        - description: Field Operation object
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/FieldOperationDTO'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/FieldOperationDTO'
        '204':
          description: Field Operation created successful
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid
        '404':
          description: Side id not found for the given Id.
      tags:
        - fieldoperations
      operationId: CreateFieldOperation
      summary: Creates a new field operation.
  /api/groups:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GroupDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - groups
      description: Request criteria is applicable.
      operationId: GetGroups
      summary: Returns a collection with all Groups associated to the logged user.
    post:
      parameters:
        - description: A group to be created.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GroupDTO'
      responses:
        '200':
          description: No response was specified
          schema:
            items:
              $ref: '#/definitions/GroupDTO'
            type: array
        '201':
          description: Group created successfully.
        '400':
          description: Invalid parameters.
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - groups
      description: Request criteria is NOT applicable.
      operationId: CreateGroup
      summary: Creates a new group .
  '/api/groups/{id}':
    delete:
      parameters:
        - default: 0
          description: The group Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
          schema:
            items:
              $ref: '#/definitions/GroupDTO'
            type: array
        '204':
          description: Group deleted successfully.
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Group not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - groups
      description: Request criteria is NOT applicable.
      operationId: DeleteGroup
      summary: >-
        Deletes a group for the given id, only if it is not associated to
        another entity.
    get:
      parameters:
        - default: 0
          description: The Group Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/GroupDTO'
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Group not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - groups
      description: Request criteria is NOT applicable.
      operationId: GetGroup
      summary: Returns a Group by id
    put:
      parameters:
        - default: 0
          description: The group Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: A group to be updated.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GroupDTO'
      responses:
        '200':
          description: No response was specified
          schema:
            items:
              $ref: '#/definitions/GroupDTO'
            type: array
        '204':
          description: Group updated successfully.
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Group not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - groups
      description: Request criteria is NOT applicable.
      operationId: UpdateGroup
      summary: Updates a group for the given id.
  '/api/groups/{id}/sites':
    get:
      parameters:
        - default: 0
          description: The Group Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/SiteDTO'
            type: array
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Group not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - groups
      description: Request criteria is NOT applicable.
      operationId: GetGroupSites
      summary: Returns sites of group whose id is given
  /api/inputtypes:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/InputTypeDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - inputtypes
      operationId: GetInputTypes
      summary: Get all available input type.
    post:
      parameters:
        - description: The Input Type object
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/InputTypeDTO'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/InputTypeDTO'
        '201':
          description: Input Type created successfully
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error
      tags:
        - inputtypes
      operationId: CreateInputType
      summary: Creates a new Input Type
  '/api/inputtypes/{id}':
    delete:
      parameters:
        - default: 0
          description: The Input Type Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
        '204':
          description: Input Type deleted successfully
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - inputtypes
      description: Request criteria is applicable.
      operationId: DeleteInputType
      summary: Delete the Input Type
    get:
      parameters:
        - default: 0
          description: The Input Type Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InputTypeDTO'
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Input Type not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - inputtypes
      description: Request criteria is NOT applicable.
      operationId: GetInputType
      summary: Returns a Input Type by id
    put:
      parameters:
        - default: 0
          description: The Input Type Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: A Input Type to update
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/TagTypeDTO'
      responses:
        '200':
          description: No response was specified
        '204':
          description: Input Type updated successfully
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - inputtypes
      description: Request criteria is applicable.
      operationId: UpdateInputType
      summary: Update the Input Type
  /api/keytypes:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/KeyTypeDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - keytypes
      description: Request criteria is applicable.
      operationId: GetKeyTypes
      summary: Returns a collection of keytypes.
  '/api/keytypes/{id}':
    get:
      parameters:
        - default: 0
          description: The Key Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/KeyTypeDTO'
        '401':
          description: Authorization token missing or invalid
        '404':
          description: KeyType not found for the given Id.
        '500':
          description: Unknown Error
      tags:
        - keytypes
      operationId: GetKeyType
      summary: The keytypes for the given id
  /api/languages:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/LanguageDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - languages
      description: Request criteria is applicable.
      operationId: GetLanguages
      summary: Returns a collection of languages.
  /api/materials:
    get:
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MaterialDTO'
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - materials
      description: This returns a list of materials
      operationId: GetMaterials
      summary: The list of materials
  /api/materials/types:
    get:
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MaterialTypeDTO'
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - materials
      description: This returns a list of materials types
      operationId: GetMaterialTypes
      summary: The list of material types
  /api/measurementpointattributekeys:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/MeasurementPointAttributeKeyDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - measurementpointattributekeys
      operationId: GetMeasurementPointAttributeKeys
      summary: Get all measurement point attribute keys.
    post:
      parameters:
        - description: A measurement point attribute key to be created.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/MeasurementPointAttributeKeyDTO'
      responses:
        '200':
          description: No response was specified
          schema:
            items:
              $ref: '#/definitions/MeasurementPointAttributeKeyDTO'
            type: array
        '201':
          description: Measurement point attribute key created successfully.
        '400':
          description: Invalid parameters.
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - measurementpointattributekeys
      description: Request criteria is NOT applicable.
      operationId: CreateMeasurementPointAttributeKey
      summary: Creates a new measurement point attribute key.
  '/api/measurementpointattributekeys/{id}':
    delete:
      parameters:
        - default: 0
          description: The measurement point attribute key Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
          schema:
            items:
              $ref: '#/definitions/MeasurementPointAttributeKeyDTO'
            type: array
        '204':
          description: Measurement point attribute key deleted successfully.
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Measurement point attribute key not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - measurementpointattributekeys
      description: Request criteria is NOT applicable.
      operationId: DeleteMeasurementPointAttributeKey
      summary: >-
        Deletes a measurement point attribute key for the given id, only if it
        is not associated to another entity.
    get:
      parameters:
        - default: 0
          description: The measurement point attribute key Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MeasurementPointAttributeKeyDTO'
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Measurement point attribute key not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - measurementpointattributekeys
      description: Request criteria is NOT applicable.
      operationId: GetMeasurementPointAttributeKey
      summary: Returns a measurement point attribute key by id
    put:
      parameters:
        - default: 0
          description: The measurement point attribute key Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: A measurement point attribute key to be updated.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/MeasurementPointAttributeKeyDTO'
      responses:
        '200':
          description: No response was specified
          schema:
            items:
              $ref: '#/definitions/MeasurementPointAttributeKeyDTO'
            type: array
        '204':
          description: Measurement point attribute key updated successfully.
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Measurement point attribute key not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - measurementpointattributekeys
      description: Request criteria is NOT applicable.
      operationId: UpdateMeasurementPointAttributeKey
      summary: Updates a measurement point attribute key for the given id.
  /api/measurementpointstatus:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/MeasurementPointStatusDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - measurementpointstatus
      operationId: GetMeasurementPointStatus
      summary: Get all measurement point status.
  /api/measurementpointtypes:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/MeasurementPointTypeDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - measurementpointtypes
      operationId: GetMeasurementPointTypes
      summary: Get all measurement point types.
    post:
      parameters:
        - description: A measurement point type to be created.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/MeasurementPointTypeDTO'
      responses:
        '200':
          description: No response was specified
          schema:
            items:
              $ref: '#/definitions/MeasurementPointTypeDTO'
            type: array
        '201':
          description: Measurement point type created successfully.
        '400':
          description: Invalid parameters.
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - measurementpointtypes
      description: Request criteria is NOT applicable.
      operationId: CreateMeasurementPointType
      summary: Creates a new measurement point type.
  '/api/measurementpointtypes/{id}':
    delete:
      parameters:
        - default: 0
          description: The measurement point type Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
          schema:
            items:
              $ref: '#/definitions/MeasurementPointTypeDTO'
            type: array
        '204':
          description: Measurement point type deleted successfully.
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Measurement point type not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - measurementpointtypes
      description: Request criteria is NOT applicable.
      operationId: DeleteMeasurementPointType
      summary: >-
        Deletes a measurement point type for the given id, only if it is not
        associated to another entity.
    get:
      parameters:
        - default: 0
          description: The measurement point type Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MeasurementPointTypeDTO'
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Measurement point type not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - measurementpointtypes
      description: Request criteria is NOT applicable.
      operationId: GetMeasurementPointType
      summary: Returns a measurement point type by id
    put:
      parameters:
        - default: 0
          description: The measurement point type Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: A measurement point type to be updated.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/MeasurementPointTypeDTO'
      responses:
        '200':
          description: No response was specified
          schema:
            items:
              $ref: '#/definitions/MeasurementPointTypeDTO'
            type: array
        '204':
          description: Measurement point type updated successfully.
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Measurement point type not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - measurementpointtypes
      description: Request criteria is NOT applicable.
      operationId: UpdateMeasurementPointType
      summary: Updates a measurement point type for the given id.
  '/api/measurementpointtypes/{pointTypeId}/measurementpointattributekeys':
    get:
      parameters:
        - default: 0
          description: The measurement point type Id
          format: int32
          in: path
          name: pointTypeId
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/MeasurementPointAttributeKeyDTO'
            type: array
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Measurement point type not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - measurementpointtypes
      description: Request criteria is applicable.
      operationId: GetMeasurementPointTypeMeasurementPointAttributeKey
      summary: >-
        Returns all the measurement point attribute keys for a given point type
        id
  '/api/measurementpointtypes/{pointTypeId}/measurementpointattributekeys/{attributeKeyId}':
    delete:
      parameters:
        - default: 0
          description: The measurement point type Id
          format: int32
          in: path
          name: pointTypeId
          required: true
          type: integer
        - default: 0
          description: The measurement point attribute key Id
          format: int32
          in: path
          name: attributeKeyId
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
        '204':
          description: >-
            Relation between measurement point type and measurement point
            attribute key deleted successfully.
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: >-
            Relation between measurement point type and measurement point
            attribute key not found for the given Ids.
        '500':
          description: Unknown Error.
      tags:
        - measurementpointtypes
      description: Request criteria is NOT applicable.
      operationId: DeleteMeasurementPointTypeMeasurementPointAttributeKey
      summary: >-
        Deletes a new relation between measurement point type and measurement
        point attribute key.
    post:
      parameters:
        - default: 0
          description: The measurement point type Id
          format: int32
          in: path
          name: pointTypeId
          required: true
          type: integer
        - default: 0
          description: The measurement point attribute key Id
          format: int32
          in: path
          name: attributeKeyId
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/MeasurementPointTypeDTO'
        '201':
          description: >-
            Relation between measurement point type and measurement point
            attribute key created successfully.
        '400':
          description: Invalid parameters.
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: >-
            Relation between measurement point type and measurement point
            attribute key not found for the given Ids.
        '500':
          description: Unknown Error.
      tags:
        - measurementpointtypes
      description: Request criteria is NOT applicable.
      operationId: CreateMeasurementPointTypeMeasurementPointAttributeKey
      summary: >-
        Creates a new relation between measurement point type and measurement
        point attribute key.
  /api/measurementunits:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/MeasurementUnitDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - measurementunits
      description: Request criteria is applicable.
      operationId: GetMeasurementUnits
      summary: Returns a collection of Measurement Units.
  /api/measurementunits/categories:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/MeasurementUnitCategoryDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - measurementunits
      description: Request criteria is applicable.
      operationId: GetMeasurementUnitCategories
      summary: Returns a collection of Measurement Unit Categories.
  '/api/messagedata/devices/{deviceId}':
    get:
      parameters:
        - default: 0
          description: The Device Id
          format: int32
          in: path
          name: deviceId
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/MessageDataDeviceDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - messagedata
      description: Request criteria is applicable.
      operationId: GetMessageDataDevice
      summary: Returns a collection of message data of device
  /api/messagemedium:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/MessageMediumDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - messagemedium
      description: Request criteria is applicable.
      operationId: GetMessageMedium
      summary: Returns a collection of message medium.
  '/api/messages/data/sites/{siteId}':
    get:
      parameters:
        - default: 0
          description: The site Id
          format: int32
          in: path
          name: siteId
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/MessageDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - messages
      description: Request criteria is applicable.
      operationId: GetMessagesDataSite
      summary: Returns a collection of messages data (received or sent).
  '/api/messages/decode/{unitTypeId}':
    put:
      parameters:
        - default: 0
          description: The site Id
          format: int32
          in: path
          name: unitTypeId
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            type: string
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - decode
      operationId: DecodeMessage
      summary: Decode a message. Returns a json with the message model.
  '/api/messages/scheduled/sites/{siteId}':
    get:
      parameters:
        - default: 0
          description: The site Id
          format: int32
          in: path
          name: siteId
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/MessageDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - messages
      description: Request criteria is applicable.
      operationId: GetCommandsScheduledSite
      summary: Returns a collection of commands scheduled.
  '/api/messages/sites/{siteId}':
    get:
      parameters:
        - default: 0
          description: The Site Id
          format: int32
          in: path
          name: siteId
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/MessageDTO'
            type: array
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Site not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - messages
      description: Request criteria is applicable.
      operationId: GetMessagesSite
      summary: Returns a collection of all messages for the given Site.
  '/api/messages/units/{unitId}':
    get:
      parameters:
        - default: 0
          description: The Unit Id
          format: int32
          in: path
          name: unitId
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/MessageDTO'
            type: array
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Unit not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - messages
      description: Request criteria is applicable.
      operationId: GetMessagesUnit
      summary: Returns a collection of all messages for the given Unit.
  '/api/messages/waitingstate/sites/{siteId}':
    get:
      parameters:
        - default: 0
          description: The Site Id
          format: int32
          in: path
          name: siteId
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/MessageDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - messages
      description: Request criteria is applicable.
      operationId: GetCommandsWaitingState
      summary: Returns a collection of commands sent waiting state.
  /api/messagestatus:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/MessageStatusDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - messagestatus
      description: Request criteria is applicable.
      operationId: GetMessageStatus
      summary: Returns a collection of message status.
  /api/messagetypes:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/MessageTypeDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - messagetypes
      description: Request criteria is applicable.
      operationId: GetMessageTypes
      summary: Returns a collection of message types.
  '/api/messagetypes/{unitId}':
    get:
      parameters:
        - default: 0
          description: The Unit Id
          format: int32
          in: path
          name: unitId
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/MessageTypeDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - messagetypes
      description: Request criteria is applicable.
      operationId: GetByUnitProtocol
      summary: Returns a collection of message types by unit protocol
  /api/messagevariables:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/MessageVariableDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - messagevariables
      description: Request criteria is applicable.
      operationId: GetMessageVariables
      summary: Returns a collection of message variables.
  /api/mobilenetworks:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/MobileNetworkDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - mobilenetworks
      description: Request criteria is applicable.
      operationId: GetMobileNetworks
      summary: Returns a collection of Mobile Networks.
    post:
      parameters:
        - description: The Mobile Network to create
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/MobileNetworkDTO'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/MobileNetworkDTO'
        '201':
          description: Mobile Network created successfully
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - mobilenetworks
      operationId: CreateMobileNetwork
      summary: Creates a new Mobile Network.
  '/api/mobilenetworks/{id}':
    delete:
      parameters:
        - default: 0
          description: The  Mobile Network Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
        '204':
          description: ' Mobile Network deleted successful'
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: ' Mobile Network not found for the given Id.'
        '500':
          description: Unknown Error.
      tags:
        - mobilenetworks
      operationId: DeleteMobileNetwork
      summary: Deletes a  Mobile Network
    get:
      parameters:
        - default: 0
          description: The Mobile Network Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MobileNetworkDTO'
        '400':
          description: Invalid parameters.
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Mobile Network not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - mobilenetworks
      description: Request criteria is NOT applicable.
      operationId: GetMobileNetwork
      summary: Returns a Mobile Network by id
    put:
      parameters:
        - default: 0
          description: The Mobile Network Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: The Mobile Network to update
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/MobileNetworkDTO'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/MobileNetworkDTO'
        '204':
          description: Mobile Network updated successful
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Mobile Network not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - mobilenetworks
      operationId: UpdateMobileNetwork
      summary: Updates a Mobile Network.
  /api/networks:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/NetworkDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - networks
      description: Request criteria is applicable.
      operationId: GetNetworks
      summary: Returns a collection of Networks.
  /api/profiles:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/ProfileDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - profiles
      description: Request criteria is applicable.
      operationId: GetProfiles
      summary: Returns a collection of profiles.
  /api/reportelastics:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/ReportElasticDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - reportelastics
      operationId: GetReportElastics
      summary: Returns a collection of ReportElastics.
  /api/reportelastics/templates:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/ReportTemplateDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - reportelastics
      operationId: GetReportTemplates
      summary: Returns a collection of ReportTemplates.
  '/api/reportelastics/templates/{id}':
    get:
      parameters:
        - default: 0
          description: The ReportTemplate Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ReportTemplateDTO'
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: ReportTemplate not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - reportelastics
      operationId: GetReportTemplate
      summary: Returns a ReportTemplate by id
  '/api/reportelastics/templates/{id}/permissions':
    put:
      parameters:
        - description: The ReportTemplate groups objects
          in: body
          name: body
          required: true
          schema: {}
        - default: 0
          description: The ReportTemplate Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GroupDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: ReportTemplate not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - reportelastics
      operationId: UpdateReportTemplates
      summary: Updates a ReportTemplate groups by id
  '/api/reportelastics/{id}':
    get:
      parameters:
        - default: 0
          description: The ReportElastic Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ReportElasticDTO'
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: ReportElastic not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - reportelastics
      operationId: GetReportElastic
      summary: Returns a ReportElastic by id
    put:
      parameters:
        - description: The ReportElastic object
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ReportElasticDTO'
        - default: 0
          description: The ReportElastic Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ReportElasticDTO'
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: ReportElastic not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - reportelastics
      operationId: UpdateReportElastic
      summary: Updates a ReportElastic by id
  '/api/reportelastics/{id}/data':
    get:
      parameters:
        - default: 0
          description: The ReportElastic Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/ReportElasticRowDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - reportelastics
      operationId: GetReporDataElastics
      summary: Returns a ReportElastic by id
  '/api/reportelastics/{id}/data/export/{type}':
    get:
      parameters:
        - default: 0
          description: The ReportElastic Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: The type to export data
          in: path
          name: type
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/ReportElasticRowDTO'
            type: array
        '400':
          description: Request has missing data or data is not in the correct format.
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - reportelastics
      operationId: GetReporElasticDataExport
      summary: Returns all data for the given type and ReportElastic Id
  /api/reports:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/ReportRowDTO'
            type: array
        '400':
          description: Request has missing data or data is not in the correct format.
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - reports
      operationId: GetReport
      summary: Returns a collection of ReportDTOs
  /api/reports/export:
    get:
      responses:
        '200':
          description: OK
        '400':
          description: Request has missing data or data is not in the correct format.
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - reports
      operationId: GetReportExport
      summary: Returns a file with the report content.
  /api/reports/fields:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/ReportFieldDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '500':
          description: Unknown Error.
      tags:
        - reports
      operationId: GetReportFields
      summary: Returns a collection of ReportFieldDTOs
  /api/schedulenotifications:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/ScheduleNotificationDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - schedulenotifications
      description: Request criteria is applicable.
      operationId: GetScheduleNotifications
      summary: Returns a collection of schedule notifications.
    post:
      parameters:
        - description: A schedule notification to be created.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ScheduleNotificationDTO'
      responses:
        '200':
          description: No response was specified
          schema:
            items:
              $ref: '#/definitions/ScheduleNotificationDTO'
            type: array
        '201':
          description: Schedule notification created successfully.
        '400':
          description: Invalid parameters.
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - schedulenotifications
      description: Request criteria is NOT applicable.
      operationId: CreateScheduleNotification
      summary: Creates a new schedule notification .
  '/api/schedulenotifications/{id}':
    delete:
      parameters:
        - default: 0
          description: The schedule notification id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
          schema:
            items:
              $ref: '#/definitions/ScheduleNotificationDTO'
            type: array
        '204':
          description: Schedule notification deleted successfully.
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Schedule notification not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - schedulenotifications
      description: Request criteria is NOT applicable.
      operationId: DeleteScheduleNotification
      summary: Deletes a schedule notification for the given id.
    get:
      parameters:
        - default: 0
          description: The schedule notification id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ScheduleNotificationDTO'
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Schedule notification not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - schedulenotifications
      description: Request criteria is NOT applicable.
      operationId: GetScheduleNotification
      summary: Returns a schedule notification by id
    put:
      parameters:
        - default: 0
          description: The schedule notification id
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: A Schedule Notification to be updated.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ScheduleNotificationDTO'
      responses:
        '200':
          description: No response was specified
          schema:
            items:
              $ref: '#/definitions/ScheduleNotificationDTO'
            type: array
        '204':
          description: Schedule notification updated successfully.
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Schedule notification not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - schedulenotifications
      description: Request criteria is NOT applicable.
      operationId: UpdateScheduleNotification
      summary: Updates a schedule notification for the given id.
  /api/schedulenotificationtemplates:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/ScheduleNotificationTemplateDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - schedulenotificationtemplates
      description: Request criteria is applicable.
      operationId: GetScheduleNotificationTemplates
      summary: Returns a collection of schedule notification templates.
    post:
      parameters:
        - description: A schedule notification template to be created.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ScheduleNotificationTemplateDTO'
      responses:
        '200':
          description: No response was specified
          schema:
            items:
              $ref: '#/definitions/ScheduleNotificationTemplateDTO'
            type: array
        '201':
          description: Schedule notification template created successfully.
        '400':
          description: Invalid parameters.
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - schedulenotificationtemplates
      description: Request criteria is NOT applicable.
      operationId: CreateScheduleNotificationTemplate
      summary: Creates a new schedule notification template.
  '/api/schedulenotificationtemplates/{id}':
    delete:
      parameters:
        - default: 0
          description: The schedule notification template id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
          schema:
            items:
              $ref: '#/definitions/ScheduleNotificationTemplateDTO'
            type: array
        '204':
          description: Schedule notification template deleted successfully.
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Schedule notification template not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - schedulenotificationtemplates
      description: Request criteria is NOT applicable.
      operationId: DeleteScheduleNotificationTemplate
      summary: Deletes a schedule notification template for the given id.
    get:
      parameters:
        - default: 0
          description: The schedule notification template id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ScheduleNotificationTemplateDTO'
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Schedule notification template not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - schedulenotificationtemplates
      description: Request criteria is NOT applicable.
      operationId: GetScheduleNotificationTemplate
      summary: Returns a schedule notification template by id
    put:
      parameters:
        - default: 0
          description: The schedule notification template id
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: A Schedule Notification template to be updated.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ScheduleNotificationTemplateDTO'
      responses:
        '200':
          description: No response was specified
          schema:
            items:
              $ref: '#/definitions/ScheduleNotificationTemplateDTO'
            type: array
        '204':
          description: Schedule notification template updated successfully.
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Schedule notification template not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - schedulenotificationtemplates
      description: Request criteria is NOT applicable.
      operationId: UpdateScheduleNotificationTemplate
      summary: Updates a schedule notification template for the given id.
  /api/schedulenotificationtypes:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/ScheduleNotificationTypeDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - schedulenotificationtypes
      description: Request criteria is applicable.
      operationId: GetScheduleNotificationTypes
      summary: Returns a collection of Schedule Notification Types.
  /api/sensortypes:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/SensorTypeDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - sensortypes
      description: Request criteria is applicable.
      operationId: GetSensorTypes
      summary: Returns a collection of Sensor Types
    post:
      parameters:
        - description: A Sensor Type to be created.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SensorTypeDTO'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/SensorTypeDTO'
        '201':
          description: Sensor Type created successfully.
        '400':
          description: Invalid parameters.
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - sensortypes
      description: Request criteria is NOT applicable.
      operationId: CreateSensorType
      summary: Creates a new Sensor Type.
  '/api/sensortypes/{id}':
    delete:
      parameters:
        - default: 0
          description: The Sensor Type Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
          schema:
            items:
              $ref: '#/definitions/SensorTypeDTO'
            type: array
        '204':
          description: Sensor Type deleted successfully.
        '400':
          description: Invalid parameters.
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Sensor Type not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - sensortypes
      description: Request criteria is NOT applicable.
      operationId: DeleteSensorType
      summary: >-
        Deletes a Sensor Type for the given id, only if it is not associated to
        another entity.
    get:
      parameters:
        - default: 0
          description: The Sensor Type Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/SensorTypeDTO'
            type: array
        '400':
          description: Invalid parameters.
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Sensor Type not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - sensortypes
      description: Request criteria is NOT applicable.
      operationId: GetSensorType
      summary: Returns a Sensor Type by id.
    put:
      parameters:
        - default: 0
          description: The Sensor Type Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: A Sensor Type to be updated.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SensorTypeDTO'
      responses:
        '200':
          description: No response was specified
          schema:
            items:
              $ref: '#/definitions/SensorTypeDTO'
            type: array
        '204':
          description: Sensor Type updated successfully.
        '400':
          description: Invalid parameters.
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Sensor Type not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - sensortypes
      description: Request criteria is NOT applicable.
      operationId: UpdateSensorType
      summary: Updates a Sensor Type for the given id.
  /api/services:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/ServiceDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - services
      description: Request criteria is applicable.
      operationId: GetServices
      summary: Returns a collection with all services.
  /api/services/instances:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/ServiceInstanceDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - services
      operationId: GetAllServiceInstances
      summary: Returns all service instances.
  '/api/services/instances/{id}':
    put:
      parameters:
        - default: 0
          description: The instance Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: A instance object
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ServiceInstanceDTO'
      responses:
        '200':
          description: No response was specified
        '204':
          description: Instance updated successfully.
        '400':
          description: Invalid parameters.
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Instance not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - services
      description: Request criteria is NOT applicable.
      operationId: UpdateServiceInstance
      summary: Updates an instance for the given id.
  '/api/services/instances/{instanceId}/configurations':
    get:
      parameters:
        - default: 0
          description: The instance Id
          format: int32
          in: path
          name: instanceId
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/ServiceInstanceConfigurationDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Instance not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - services
      operationId: GetInstanceConfigurations
      summary: Returns a collection of configurations from service instance.
  '/api/services/instances/{instanceId}/networks':
    get:
      parameters:
        - default: 0
          description: The instance Id
          format: int32
          in: path
          name: instanceId
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/NetworkDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Instance not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - services
      operationId: GetInstanceNetworks
      summary: Returns a collection of networks from service instance.
  /api/services/types:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/ServiceTypeDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - services
      operationId: GetServiceTypes
      summary: Returns all service types.
  '/api/services/{id}':
    get:
      parameters:
        - default: 0
          description: The service Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/ServiceDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Service not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - services
      operationId: GetService
      summary: Returns the service information.
    put:
      parameters:
        - default: 0
          description: The service Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: A service object
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ServiceDTO'
      responses:
        '200':
          description: No response was specified
        '204':
          description: Service updated successfully.
        '400':
          description: Invalid parameters.
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Service not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - services
      description: Request criteria is NOT applicable.
      operationId: UpdateService
      summary: Updates a service for the given id.
  '/api/services/{id}/instances':
    get:
      parameters:
        - default: 0
          description: The service Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/ServiceInstanceDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Service not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - services
      operationId: GetServiceInstances
      summary: Returns a collection of instances from that service.
  '/api/services/{serviceId}/configurations':
    get:
      parameters:
        - default: 0
          description: The service Id
          format: int32
          in: path
          name: serviceId
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/ServiceConfigurationDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Service not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - services
      operationId: GetServiceConfigurations
      summary: Returns a collection of service configurations.
  /api/sessions:
    post:
      parameters:
        - description: The Login object
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/LoginDTO'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/SessionDTO'
        '201':
          description: Created
        '400':
          description: Email or password is missing
        '401':
          description: Login failed
        '500':
          description: Unknown Error
      tags:
        - sessions
      operationId: Login
      summary: Log in
  /api/sessions/impersonate:
    post:
      parameters:
        - description: The Impersonate object
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ImpersonateDTO'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/SessionDTO'
        '201':
          description: Created
        '401':
          description: Login failed
        '404':
          description: User not found
        '500':
          description: Unknown Error
      tags:
        - sessions
      operationId: Impersonate
      summary: Log in
  /api/sessions/refresh:
    put:
      parameters:
        - description: The Session object with the refresh token
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SessionDTO'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/SessionDTO'
        '201':
          description: Created
        '400':
          description: Refresh token not valid
        '401':
          description: Login failed
        '500':
          description: Unknown Error
      tags:
        - sessions
      operationId: RefreshToken
      summary: Log in
  /api/settings:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/SettingDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - settings
      description: Request criteria is applicable.
      operationId: GetSettings
      summary: Returns a collection of Settings.
  /api/settings/categories:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/SettingCategoryDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - settings
      description: Request criteria is applicable.
      operationId: GetSettingCategories
      summary: Returns a collection of Setting Categories.
  /api/simcards:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/SimCardDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - simcards
      description: Request criteria is applicable.
      operationId: GetSimCards
      summary: Returns a collection of Sim Cards.
    post:
      parameters:
        - description: TheSim Card to create
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SimCardDTO'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/SimCardDTO'
        '201':
          description: Sim Card created successfully
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - simcards
      operationId: CreateSimCard
      summary: Creates a new Sim Card.
  /api/simcards/status:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/SimCardStatusDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - simcards
      operationId: GetSimCardStatus
      summary: Get all SimCard status.
  '/api/simcards/{id}':
    delete:
      parameters:
        - default: 0
          description: The Sim Card Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
        '204':
          description: Sim Card deleted successful
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Sim Card not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - simcards
      operationId: DeleteSimCard
      summary: Deletes a Sim Card
    put:
      parameters:
        - default: 0
          description: The Sim Card Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: The Sim Card to update
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SimCardDTO'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/SimCardDTO'
        '204':
          description: Sim Card updated successful
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Sim Card not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - simcards
      operationId: UpdateSimCard
      summary: Updates a Sim Card.
  /api/sites:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/SiteDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - sites
      description: Request criteria is applicable.
      operationId: GetSites
      summary: Returns a collection with all Sites associated to the logged user.
    post:
      parameters:
        - description: A Site object
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SiteDTO'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/SiteDTO'
        '201':
          description: Site created successfully.
        '400':
          description: Invalid parameters.
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - sites
      description: Request criteria is NOT applicable.
      operationId: CreateSite
      summary: Creates a Site.
  /api/sites/bulk:
    post:
      parameters:
        - description: A site object collection
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SiteDTO'
      responses:
        '200':
          description: No response was specified
          schema:
            items:
              $ref: '#/definitions/SiteDTO'
            type: array
        '201':
          description: Sites created successfully.
        '400':
          description: Invalid parameters.
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - sites
      description: Request criteria is NOT applicable.
      operationId: CreateSites
      summary: Creates a collection of Sites.
  /api/sites/elastic/list:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/SiteDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - sites
      description: >-
        This method is provided by azure search, so request criteria is
        applicable, however includes are not applicable.
      operationId: GetSitesElasticList
      summary: Returns a collection with all Sites associated to the logged user.
  /api/sites/fields:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/SiteFieldDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '500':
          description: Unknown Error.
      tags:
        - sites
      operationId: GetSiteFields
      summary: Returns a collection of SiteFieldDTOs
  /api/sites/maps:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/SiteMapDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - sites/maps
      description: Request criteria is applicable.
      operationId: GetSitesMap
      summary: Returns a collection with all Sites points to the logged user.
  /api/sites/status:
    get:
      responses:
        '200':
          description: OK
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - sites
      description: Request criteria is applicable.
      operationId: GetSitesStatus
      summary: Returns a collection with the available status for a Site.
  '/api/sites/status/{id}/transitions':
    get:
      parameters:
        - default: 0
          description: The Site Status Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK
        '400':
          description: Invalid parameters.
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Site status not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - sites
      description: Request criteria is applicable.
      operationId: GetSiteStatusTransitions
      summary: >-
        Returns a collection with the available site destination status for a
        given site origin status
  /api/sites/tags/validations:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/SiteDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - sites
      description: Request criteria is applicable.
      operationId: GetSitesTagsToValidate
      summary: Returns a collection with all Sites and tags with validations.
  '/api/sites/{id}':
    get:
      parameters:
        - default: 0
          description: The site Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SiteDTO'
        '400':
          description: Invalid parameters.
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Site not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - sites
      description: Request criteria is NOT applicable.
      operationId: GetSite
      summary: 'Returns a Site for the given id, if it is associated to the logged user.'
    put:
      parameters:
        - default: 0
          description: The site Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: A Site object
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SiteDTO'
      responses:
        '200':
          description: No response was specified
        '204':
          description: Site updated successfully.
        '400':
          description: Invalid parameters.
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Site not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - sites
      description: Request criteria is NOT applicable.
      operationId: UpdateSite
      summary: 'Updates a Site for the given id, if it is associated to the logged user.'
  '/api/sites/{id}/alarms/subscribers/available/outputtype/{outputtypeid}':
    get:
      parameters:
        - default: 0
          description: The Site Id.
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - default: 0
          description: The AlarmOutputType Id.
          format: int32
          in: path
          name: outputtypeid
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/AlarmSubscriberDTO'
            type: array
        '400':
          description: BadRequest
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Alarm output type not found for the given outputtypeid.
        '500':
          description: Unknown Error.
      tags:
        - sites
      description: Request criteria is applicable.
      operationId: GetSiteAlarmSubscribersAvailable
      summary: Get subscribers available for given Site id.
  '/api/sites/{id}/measurementpoints':
    get:
      parameters:
        - default: 0
          description: The Site Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/MeasurementPointDTO'
            type: array
        '400':
          description: Invalid parameters.
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Measurement Point not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - sites
      description: Request criteria is applicable.
      operationId: GetSiteMeasurementPoints
      summary: >-
        Returns a collection with the measurement points of a Site, if it is
        associated to the logged user.
    post:
      parameters:
        - default: 0
          description: The Site Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: A Site measurement point object
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/MeasurementPointDTO'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/MeasurementPointDTO'
        '201':
          description: Created
        '400':
          description: MeasurementPoint parameters.
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: MeasurementPoint not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - sites
      description: Request criteria is NOT applicable.
      operationId: CreateSiteMeasurementPoint
      summary: Creates a new site measurement point.
  '/api/sites/{id}/status':
    get:
      parameters:
        - default: 0
          description: The Site Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/SiteStatusHistoryDTO'
            type: array
        '400':
          description: Invalid parameters.
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Site not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - sites
      description: Request criteria is applicable.
      operationId: GetSiteStatusHistory
      summary: >-
        Returns a collection with the status history of a Site, if it is
        associated to the logged user.
    post:
      parameters:
        - default: 0
          description: The Site Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: A Site State History object
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SiteStatusHistoryDTO'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/SiteStatusHistoryDTO'
        '201':
          description: Created
        '400':
          description: Site parameters.
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Site not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - sites
      description: Request criteria is NOT applicable.
      operationId: CreateSiteStatusHistory
      summary: Applies a status transition to the given site.
  '/api/sites/{id}/units':
    get:
      parameters:
        - default: 0
          description: The Site Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/UnitDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Site not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - sites
      description: Request criteria is applicable.
      operationId: GetSiteUnits
      summary: Returns a Site's Units.
  '/api/sites/{siteId}/alarms':
    get:
      parameters:
        - default: 0
          description: The site Id
          format: int32
          in: path
          name: siteId
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/AlarmDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - sites
      description: Request criteria is applicable.
      operationId: GetSiteAlarms
      summary: Returns a collection with all alarms associated to the Site.
    post:
      parameters:
        - default: 0
          description: The site Id
          format: int32
          in: path
          name: siteId
          required: true
          type: integer
        - description: Body parameter
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AlarmDTO'
      responses:
        '200':
          description: OK
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - sites
      description: Request criteria is applicable.
      operationId: CreateSiteAlarm
      summary: Creates a new alarm.
  '/api/sites/{siteId}/alarms/occurrences':
    get:
      parameters:
        - default: 0
          description: The site Id
          format: int32
          in: path
          name: siteId
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/AlarmConditionDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - sites
      operationId: GetSiteAlarmHistory
      summary: Get all available alarm occurrences.
  '/api/sites/{siteId}/alarms/{alarmId}':
    delete:
      parameters:
        - default: 0
          description: The site Id
          format: int32
          in: path
          name: siteId
          required: true
          type: integer
        - default: 0
          description: The Alarm Id
          format: int32
          in: path
          name: alarmId
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
        '204':
          description: Alarm deleted successfully.
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Alarm not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - sites
      description: Request criteria is NOT applicable.
      operationId: DeleteSiteAlarm
      summary: Delete a alarm for the given id.
    get:
      parameters:
        - default: 0
          description: The Site Id
          format: int32
          in: path
          name: siteId
          required: true
          type: integer
        - default: 0
          description: The Alarm Id
          format: int32
          in: path
          name: alarmId
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AlarmDTO'
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Alarm not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - sites
      description: Request criteria is NOT applicable.
      operationId: GetSiteAlarmById
      summary: Returns a Site by id
    put:
      parameters:
        - default: 0
          description: The site Id
          format: int32
          in: path
          name: siteId
          required: true
          type: integer
        - default: 0
          description: The Alarm Id
          format: int32
          in: path
          name: alarmId
          required: true
          type: integer
        - description: A alarm to be updated.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AlarmDTO'
      responses:
        '200':
          description: No response was specified
          schema:
            items:
              $ref: '#/definitions/AlarmDTO'
            type: array
        '204':
          description: Alarm updated successfully.
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Alarm not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - sites
      description: Request criteria is NOT applicable.
      operationId: UpdateSiteAlarm
      summary: Updates a alarm for the given id.
  '/api/sites/{siteId}/fieldoperationtypes':
    get:
      parameters:
        - default: 0
          description: The site Id
          format: int32
          in: path
          name: siteId
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FieldOperationTypeDTO'
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Site not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - sites
      description: Request criteria is applicable.
      operationId: GetSiteFieldOperationTypes
      summary: >-
        Returns a collection with the available field operation types for a
        Site.
  '/api/sites/{siteId}/measurementpoints/{measurementPointId}':
    delete:
      parameters:
        - default: 0
          description: The site Id
          format: int32
          in: path
          name: siteId
          required: true
          type: integer
        - default: 0
          description: The MeasurementPoint Id
          format: int32
          in: path
          name: measurementPointId
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
        '204':
          description: Measurement Point deleted successful
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Measurement Point not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - sites
      operationId: DeleteSiteMeasurementPoint
      summary: Deletes a Measurement point
    get:
      parameters:
        - default: 0
          description: The site Id
          format: int32
          in: path
          name: siteId
          required: true
          type: integer
        - default: 0
          description: The MeasurementPoint Id
          format: int32
          in: path
          name: measurementPointId
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MeasurementPointDTO'
        '400':
          description: Invalid parameters.
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: MeasurementPoint not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - sites
      description: Request criteria is NOT applicable.
      operationId: GetSiteMeasurementPoint
      summary: >-
        Returns a Measurement point for the given id, if it is associated to the
        logged user.
    put:
      parameters:
        - default: 0
          description: The site Id
          format: int32
          in: path
          name: siteId
          required: true
          type: integer
        - default: 0
          description: The MeasurementPoint Id
          format: int32
          in: path
          name: measurementPointId
          required: true
          type: integer
        - description: A Measurement Point object
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/MeasurementPointDTO'
      responses:
        '200':
          description: MeasurementPoint updated successfully.
        '400':
          description: Invalid parameters.
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: MeasurementPoint not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - sites
      description: Request criteria is NOT applicable.
      operationId: UpdateSiteMeasurementPoint
      summary: >-
        Updates a MeasurementPoint for the given id, if it is associated to the
        logged user.
  '/api/sites/{siteId}/measurementpoints/{measurementPointId}/tags':
    get:
      parameters:
        - default: 0
          description: The site Id
          format: int32
          in: path
          name: siteId
          required: true
          type: integer
        - default: 0
          description: The MeasurementPoint Id
          format: int32
          in: path
          name: measurementPointId
          required: true
          type: integer
      responses:
        '200':
          description: Tags list successfully.
        '400':
          description: Invalid parameters.
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Site not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - sites
      description: Request criteria is NOT applicable.
      operationId: GetSiteMeasurementPointTags
      summary: >-
        List of Tags for the given site and MeasurementPoint, if it is
        associated to the logged user.
  '/api/sites/{siteId}/measurementpointtypes/{pointTypeId}/measurementpointattributekeys':
    get:
      parameters:
        - default: 0
          description: The site Id
          format: int32
          in: path
          name: siteId
          required: true
          type: integer
        - default: 0
          description: The Measurement Point Type Id
          format: int32
          in: path
          name: pointTypeId
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MeasurementPointDTO'
        '400':
          description: Invalid parameters.
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: MeasurementPoint Attributes not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - sites
      description: Request criteria is NOT applicable.
      operationId: GetSiteMeasurementPointAttributeKeys
      summary: >-
        Returns a Measurement point attribute keys for the given id, if it is
        associated to the logged user.
  '/api/sites/{siteId}/status/observations':
    post:
      parameters:
        - default: 0
          description: The site Id
          format: int32
          in: path
          name: siteId
          required: true
          type: integer
        - description: Body parameter
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SiteStatusHistoryObservationDTO'
      responses:
        '200':
          description: OK
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - sites
      description: Request criteria is applicable.
      operationId: CreateSiteStatusHistoryObservation
      summary: Creates a new observation.
  '/api/sites/{siteId}/status/{statusId}/observations':
    get:
      parameters:
        - default: 0
          description: The Site Id
          format: int32
          in: path
          name: siteId
          required: true
          type: integer
        - default: 0
          description: The Status History Id
          format: int32
          in: path
          name: statusId
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/SiteStatusHistoryObservationDTO'
            type: array
        '400':
          description: Invalid parameters.
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Site/Status not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - sites
      description: Request criteria is applicable.
      operationId: GetSiteStatusHistoryObservations
      summary: Returns a collection of observations from the site status history.
  /api/stats/fieldoperations:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/ReportElasticRowDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - stats
      description: Request criteria is applicable.
      operationId: GetFieldOperationStats
      summary: Returns a collection of FieldOperationDTO
  /api/stats/fieldoperations/validation:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/FieldOperationValidationStatsDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - stats
      description: Request criteria is applicable.
      operationId: GetFieldOperationValidationStats
      summary: Returns a collection of FieldOperationValidationStatsDTO
  '/api/stats/groups/{id}/units':
    get:
      parameters:
        - default: 0
          description: The Group Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/GroupDTO'
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Group not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - stats
      description: Request criteria is NOT applicable.
      operationId: GetGroupStatsUnits
      summary: Returns unit stats for the Group by id
  /api/stats/sites/status:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/SiteStatusStatsDTO'
            type: array
        '400':
          description: Invalid parameters.
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Site status not found for the code sent in filter parameter.
        '500':
          description: Unknown Error.
      tags:
        - stats
      description: Request criteria is applicable.
      operationId: GeSiteStatusStats
      summary: Returns a collection of SiteStatusStatsDTO
  /api/stats/tags/details:
    get:
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TagsDetailsStatsDTO'
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Details for tags not found.
        '500':
          description: Unknown Error.
      tags:
        - stats
      operationId: GetTagsDetailsStats
      summary: Returns a collection of TagsDetailsStatsDTO
  /api/stats/tags/missingdata:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/TagMissingDataStatsDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - stats
      description: Request criteria is applicable.
      operationId: GetTagMissingDataStats
      summary: Returns a collection of TagMissingDataStatsDTO
  /api/stats/tags/unvalidated:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/UnvalidatedTagStatsDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - stats
      description: Request criteria is applicable.
      operationId: GetUnvalidatedTagsStats
      summary: Returns a collection of UnvalidatedTagStatsDTO
  /api/stats/tags/validated:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/ValidatedTagStatsDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - stats
      description: Request criteria is applicable.
      operationId: GetValidatedTagsStats
      summary: Returns a collection of ValidatedTagStatsDTO
  /api/stats/units:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/UnitStatsDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - stats
      description: Request criteria is applicable.
      operationId: GetUnitStats
      summary: Returns a collection of UnitStatsDTO
  /api/stats/units/lowbattery:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/UnitLowBatteryStatsDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - stats
      description: Request criteria is applicable.
      operationId: GetUnitLowBatteryStats
      summary: Returns a collection of UnitLowBatteryStatsDTO
  /api/stats/units/missingcommunication:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/UnitMissingCommunicationStatsDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - stats
      description: Request criteria is applicable.
      operationId: GetUnitMissingCommunicationStats
      summary: Returns a collection of UnitMissingCommunicationStatsDTO
  /api/tags:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/TagDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - tags
      operationId: GetTags
      summary: Returns a collection of Tags.
    post:
      parameters:
        - description: The Tag object
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/TagDTO'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/TagDTO'
        '201':
          description: Tag created successfully
        '400':
          description: Invalid parameters
        '500':
          description: Unknown Error
      tags:
        - tags
      operationId: CreateTag
      summary: Creates a new tag
  /api/tags/status:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/TagStatusDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - tags
      description: Request criteria is applicable.
      operationId: GetTagStatus
      summary: Returns a collection of Tag Status.
  /api/tags/validations:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/TagDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - tags
      operationId: GetTagsToValidate
      summary: Returns a collection of Tags.
  '/api/tags/{id}':
    delete:
      parameters:
        - default: 0
          description: The Tag Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
        '204':
          description: NoContent
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Tag not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - tags
      operationId: DeleteTag
      summary: Deletes a Tag by id
    get:
      parameters:
        - default: 0
          description: The Tag Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TagDTO'
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Tag not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - tags
      operationId: GetTag
      summary: Returns a Tag by id
    put:
      parameters:
        - description: The Tag object
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/TagDTO'
        - default: 0
          description: The Tag Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TagDTO'
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Tag not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - tags
      operationId: UpdateTag
      summary: Updates a Tag by id
  '/api/tags/{id}/configurations':
    get:
      parameters:
        - default: 0
          description: The Tag Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/ConfigurationTagDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Configuration not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - tags
      description: Request criteria is applicable.
      operationId: GetTagConfigurations
      summary: Returns an array of Tag configurations.
    post:
      parameters:
        - default: 0
          description: The Tag Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: A Configurations to create
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ConfigurationTagDTO'
      responses:
        '200':
          description: No response was specified
          schema:
            items:
              $ref: '#/definitions/ConfigurationTagDTO'
            type: array
        '201':
          description: Configurations created successfully
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - tags
      operationId: CreateTagConfigurations
      summary: Create a new array of configurations
    put:
      parameters:
        - default: 0
          description: The Tag Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: A Configurations to update
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ConfigurationTagDTO'
      responses:
        '200':
          description: No response was specified
        '204':
          description: Configurations updated successfully
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - tags
      description: Request criteria is applicable.
      operationId: UpdateTagConfigurations
      summary: Update the configurations
  '/api/tags/{tagId}/status/{statusId}':
    put:
      parameters:
        - default: 0
          description: The Tag Id
          format: int32
          in: path
          name: tagId
          required: true
          type: integer
        - default: 0
          description: The Status Id
          format: int32
          in: path
          name: statusId
          required: true
          type: integer
      responses:
        '200':
          description: OK
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Tag not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - tags
      operationId: SetTagStatus
      summary: Updates a Tag status by id
  '/api/tags/{tagId}/calibrations':
    get:
      parameters:
        - default: 0
          description: The Tag Id
          format: int32
          in: path
          name: tagId
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/CalibrationCurveDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - tags
      operationId: GetTagCalibration
      summary: Returns a collection of Tags Calibrations.
    post:
      parameters:
        - default: 0
          description: The Tag Id
          format: int32
          in: path
          name: tagId
          required: true
          type: integer
        - description: The Calibration object
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CalibrationCurveDTO'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/CalibrationCurveDTO'
        '201':
          description: Tag Calibration created successfully
        '400':
          description: Invalid parameters
        '500':
          description: Unknown Error
      tags:
        - tags
      operationId: CreateTagCalibration
      summary: Creates a new tag calibration
  '/api/tags/{tagId}/calibrations/{calibrationId}':
    delete:
      parameters:
        - default: 0
          description: The Tag Id
          format: int32
          in: path
          name: tagId
          required: true
          type: integer
        - default: 0
          description: The Tag Calibration Id
          format: int32
          in: path
          name: calibrationId
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
        '204':
          description: NoContent
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Calibration not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - tags
      operationId: DeleteTagCalibration
      summary: Deletes a Tag calibration by id
    put:
      parameters:
        - description: The Tag object
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CalibrationCurveDTO'
        - default: 0
          description: The Tag Id
          format: int32
          in: path
          name: tagId
          required: true
          type: integer
        - default: 0
          description: The Tag Calibration Id
          format: int32
          in: path
          name: calibrationId
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CalibrationCurveDTO'
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Calibration not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - tags
      operationId: UpdateTagCalibration
      summary: Updates a Tag calibration by id
  '/api/tags/{tagId}/calibrations/{calibrationId}/points':
    get:
      parameters:
        - default: 0
          description: The Tag Id
          format: int32
          in: path
          name: tagId
          required: true
          type: integer
        - default: 0
          description: The Calibration Id
          format: int32
          in: path
          name: calibrationId
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/CalibrationCurvePointDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - tags
      operationId: GetTagCalibrationPoints
      summary: Returns a collection of Tags Calibrations points.
    post:
      parameters:
        - default: 0
          description: The Tag Id
          format: int32
          in: path
          name: tagId
          required: true
          type: integer
        - default: 0
          description: The Calibration Id
          format: int32
          in: path
          name: calibrationId
          required: true
          type: integer
        - description: The Calibration Point object
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CalibrationCurvePointDTO'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/CalibrationCurvePointDTO'
        '201':
          description: Tag Calibration created successfully
        '400':
          description: Invalid parameters
        '500':
          description: Unknown Error
      tags:
        - tags
      operationId: CreateTagCalibrationPoint
      summary: Creates a new tag calibration point
  '/api/tags/{tagId}/calibrations/{calibrationId}/points/{pointId}':
    delete:
      parameters:
        - default: 0
          description: The Tag Id
          format: int32
          in: path
          name: tagId
          required: true
          type: integer
        - default: 0
          description: The Tag Calibration Id
          format: int32
          in: path
          name: calibrationId
          required: true
          type: integer
        - default: 0
          description: The Tag Calibration point Id
          format: int32
          in: path
          name: pointId
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
        '204':
          description: NoContent
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Calibration not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - tags
      operationId: DeleteTagCalibrationPoint
      summary: Deletes a Tag calibration point by id
    put:
      parameters:
        - description: The Tag object
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CalibrationCurvePointDTO'
        - default: 0
          description: The Tag Id
          format: int32
          in: path
          name: tagId
          required: true
          type: integer
        - default: 0
          description: The Tag Calibration point Id
          format: int32
          in: path
          name: pointId
          required: true
          type: integer
        - default: 0
          description: The Tag Calibration Id
          format: int32
          in: path
          name: calibrationId
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CalibrationCurvePointDTO'
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Calibration not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - tags
      operationId: UpdateTagCalibrationPoint
      summary: Updates a Tag by id
  '/api/tags/{tagId}/configurations/{configurationId}':
    delete:
      parameters:
        - default: 0
          description: The Tag Id
          format: int32
          in: path
          name: tagId
          required: true
          type: integer
        - default: 0
          description: The ConfigurationId type Id
          format: int32
          in: path
          name: configurationId
          required: true
          type: integer
      responses:
        '200':
          description: OK
        '204':
          description: Configuration deleted successfully
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - tags
      operationId: DeleteTagConfiguration
      summary: Delete Tag configuration
  /api/tagtypes:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/TagTypeDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - tagtypes
      operationId: GetTagTypes
      summary: Get all available tag types.
    post:
      parameters:
        - description: The Tag Type object
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/TagTypeDTO'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/TagTypeDTO'
        '201':
          description: Tag type created successfully
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error
      tags:
        - tagtypes
      operationId: CreateTagType
      summary: Creates a new tag type
  /api/tagtypes/groups:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/TagTypeGroupDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - tagtypes
      description: Request criteria is applicable.
      operationId: GetTagTypeGroups
      summary: Returns a collection of Tag Type Groups
    post:
      parameters:
        - description: A Tag Type Group to be created.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/TagTypeGroupDTO'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/TagTypeGroupDTO'
        '201':
          description: Tag Type Group created successfully.
        '400':
          description: Invalid parameters.
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - tagtypes
      description: Request criteria is NOT applicable.
      operationId: CreateTagTypeGroup
      summary: Creates a new Tag Type Group.
  '/api/tagtypes/groups/{id}':
    delete:
      parameters:
        - default: 0
          description: The Tag Type Group Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/TagTypeGroupDTO'
        '204':
          description: Tag Type Group deleted successfully.
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Tag Type Group not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - tagtypes
      description: Request criteria is NOT applicable.
      operationId: DeleteTagTypeGroup
      summary: >-
        Deletes a Tag Type Group for the given id, only if it is not associated
        to another entity.
    get:
      parameters:
        - default: 0
          description: The Tag Type Group Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TagTypeGroupDTO'
        '400':
          description: Invalid parameters.
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Tag Type Group not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - tagtypes
      description: Request criteria is NOT applicable.
      operationId: GetTagTypeGroup
      summary: Returns a Tag Type Group by id.
    put:
      parameters:
        - default: 0
          description: The Tag Type Group Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: A Tag Type Group to be updated.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/TagTypeGroupDTO'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/TagTypeGroupDTO'
        '204':
          description: Tag Type Group updated successfully.
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Tag Type Group not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - tagtypes
      description: Request criteria is NOT applicable.
      operationId: UpdateTagTypeGroup
      summary: Updates a Tag Type Group for the given id.
  '/api/tagtypes/{id}':
    delete:
      parameters:
        - default: 0
          description: The Tag Type Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
        '204':
          description: TagType deleted successfully
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - tagtypes
      description: Request criteria is applicable.
      operationId: DeleteTagType
      summary: Delete the TagType
    get:
      parameters:
        - default: 0
          description: The Tag Type Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TagTypeDTO'
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Tag Type not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - tagtypes
      description: Request criteria is NOT applicable.
      operationId: GetTagType
      summary: Returns a Tag Type by id
    put:
      parameters:
        - default: 0
          description: The Tag Type Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: A TagType to update
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/TagTypeDTO'
      responses:
        '200':
          description: No response was specified
        '204':
          description: TagType updated successfully
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - tagtypes
      description: Request criteria is applicable.
      operationId: UpdateTagType
      summary: Update the TagType
  /api/timezones:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/TimezoneDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - timezones
      description: Request criteria is applicable.
      operationId: GetTimezones
      summary: Returns a collection of timezones.
  '/api/timezones/{id}':
    get:
      parameters:
        - description: The Timezone Id
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TimezoneDTO'
        '400':
          description: Invalid parameters.
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Timezone not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - timezones
      description: Request criteria is NOT applicable.
      operationId: GetTimezone
      summary: Returns a timezone by id
  /api/units:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/UnitDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - units
      description: Request criteria is applicable.
      operationId: GetUnits
      summary: Returns a collection of Units.
    post:
      parameters:
        - description: A unit to create
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UnitDTO'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/UnitDTO'
        '201':
          description: Unit created successfully
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - units
      operationId: CreateUnit
      summary: Create a new unit
  /api/units/batteryLevel:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/UnitDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - units
      description: Request criteria is applicable.
      operationId: GetUnitsWithBatteryLevel
      summary: Returns a collection of Units with battery level from device stats
  /api/units/hardwarehashalgorithm:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/HardwareHashAlgorithmDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - units
      description: Request criteria is applicable.
      operationId: GetHardwareHashAlgorithms
      summary: Returns a collection of HarwareHashAlgorithms
  /api/units/protocols:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/UnitProtocolDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - units
      description: Request criteria is applicable.
      operationId: GetUnitProtocols
      summary: Returns a collection of Unit Protocols
  '/api/units/protocols/{id}':
    get:
      parameters:
        - default: 0
          description: The Unit Protocol Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UnitProtocolDTO'
        '400':
          description: Invalid parameters.
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Unit Protocol not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - units
      description: Request criteria is NOT applicable.
      operationId: GetUnitProtocol
      summary: Returns a Unit Protocol by id.
  /api/units/status:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/UnitStatusDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - units
      operationId: GetUnitStatus
      summary: Get all unit status.
  '/api/units/{id}':
    delete:
      parameters:
        - default: 0
          description: The Unit Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
        '204':
          description: NoContent
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Unit not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - units
      operationId: DeleteUnit
      summary: Returns a Unit by id
    get:
      parameters:
        - default: 0
          description: The Unit Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UnitDTO'
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Unit not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - units
      description: Request criteria is NOT applicable.
      operationId: GetUnit
      summary: Returns a Unit by id
    put:
      parameters:
        - default: 0
          description: The Unit Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: A unit to update
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UnitDTO'
      responses:
        '200':
          description: No response was specified
        '204':
          description: Unit updated successfully
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - units
      operationId: UpdateUnit
      summary: Updates a unit
  '/api/units/{id}/beforenextsearch':
    get:
      parameters:
        - default: 0
          description: The unit id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            type: string
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Unit not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - units
      description: Request criteria is NOT applicable.
      operationId: GetBeforeNextSearch
      summary: Returns the before next search date
  '/api/units/{id}/configurations':
    get:
      parameters:
        - default: 0
          description: The Unit Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/ConfigurationUnitDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Configuration not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - units
      description: Request criteria is applicable.
      operationId: GetUnitConfigurations
      summary: Returns an array of unit configurations.
    post:
      parameters:
        - default: 0
          description: The Unit Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: A Configurations to create
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ConfigurationUnitDTO'
      responses:
        '200':
          description: No response was specified
          schema:
            items:
              $ref: '#/definitions/ConfigurationUnitDTO'
            type: array
        '201':
          description: Configurations created successfully
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - units
      operationId: CreateUnitConfigurations
      summary: Create a new array of configurations
    put:
      parameters:
        - default: 0
          description: The Unit Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: A Configurations to update
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ConfigurationUnitDTO'
      responses:
        '200':
          description: No response was specified
        '204':
          description: Configurations updated successfully
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - units
      description: Request criteria is applicable.
      operationId: UpdateUnitConfigurations
      summary: Update the configurations
  '/api/units/{id}/configurations/{configurationId}':
    delete:
      parameters:
        - default: 0
          description: The Unit Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - default: 0
          description: The ConfigurationId type Id
          format: int32
          in: path
          name: configurationId
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
        '204':
          description: Configuration deleted successfully
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - units
      operationId: DeleteUnitConfiguration
      summary: Delete unit  configuration
  '/api/units/{id}/devices':
    get:
      parameters:
        - default: 0
          description: The Unit Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/DeviceDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Unit not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - units
      description: Request criteria is applicable.
      operationId: GetUnitDevices
      summary: Returns a Unit's Devices.
  '/api/units/{id}/history':
    get:
      parameters:
        - default: 0
          description: The Unit Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/UnitStatusHistoryDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Site not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - units
      description: Request criteria is applicable.
      operationId: GetUnitStatusHistory
      summary: Returns a Units history.
  '/api/units/{id}/status/disable':
    put:
      parameters:
        - default: 0
          description: The Unit Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
        '204':
          description: Unit disabled successfully
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - units
      description: Request criteria is NOT applicable.
      operationId: DisableUnit
      summary: Disable an unit and its devices.
  '/api/units/{id}/tags':
    get:
      parameters:
        - default: 0
          description: The Unit Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/TagDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Unit not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - units
      operationId: GetUnitTags
      summary: Returns a Unit's Tags.
  /api/unittypes:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/UnitTypeDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - unittypes
      description: Request criteria is applicable.
      operationId: GetUnitTypes
      summary: Returns a collection of UnitTypeDTOs
    post:
      parameters:
        - description: A unit type to create
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UnitTypeDTO'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/UnitTypeDTO'
        '201':
          description: Unit type created successfully
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - unittypes
      operationId: CreateUnitType
      summary: Create a new unit type
  /api/unittypes/hierarchy:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/HierarchyUnitTypeDeviceTypeDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - unittypes
      description: Request criteria is applicable.
      operationId: GetUnitTypeHierarchy
      summary: Returns a collection of UnitTypes Hierarchy
  /api/unittypes/hierarchy/version:
    get:
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DatabaseVersionDTO'
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - unittypes
      description: Request criteria is NOT applicable.
      operationId: GetHierarchyVersion
      summary: Returns the version of hierarchy.
  '/api/unittypes/{id}':
    delete:
      parameters:
        - default: 0
          description: The Unit type Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK
        '204':
          description: Unit type deleted successfully
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - unittypes
      operationId: DeleteUnitType
      summary: 'Delete unit type '
    get:
      parameters:
        - default: 0
          description: The Unit Type Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UnitTypeDTO'
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Unit Type not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - unittypes
      description: Request criteria is NOT applicable.
      operationId: GetUnitType
      summary: Returns a Unit Type by id
    put:
      parameters:
        - default: 0
          description: The Unit type Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: A unit type to update
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UnitTypeDTO'
      responses:
        '200':
          description: No response was specified
        '204':
          description: Unit type updated successfully
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - unittypes
      operationId: UpdateUnitType
      summary: Updates a unit type
  '/api/unittypes/{id}/configurations':
    get:
      parameters:
        - default: 0
          description: The Unit type Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/ConfigurationTemplateUnitTypeDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Configuration not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - unittypes
      description: Request criteria is applicable.
      operationId: GetUnitTypeConfigurations
      summary: Returns an array of unit type configurations.
    post:
      parameters:
        - default: 0
          description: The Unit type Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: A Configurations to create
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ConfigurationTemplateUnitTypeDTO'
      responses:
        '200':
          description: No response was specified
          schema:
            items:
              $ref: '#/definitions/ConfigurationTemplateUnitTypeDTO'
            type: array
        '201':
          description: Configurations created successfully
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - unittypes
      description: Request criteria is applicable.
      operationId: CreateUnitTypeConfigurations
      summary: Create a new configuration
    put:
      parameters:
        - default: 0
          description: The Unit type Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: A Configurations to update
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ConfigurationTemplateUnitTypeDTO'
      responses:
        '200':
          description: No response was specified
        '204':
          description: Configurations updated successfully
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - unittypes
      description: Request criteria is applicable.
      operationId: UpdateUnitTypeConfigurations
      summary: Update the configurations
  '/api/unittypes/{unitTypeId}/devicetypes/{deviceTypeId}/inputtypes/{inputTypeId}/configurations':
    get:
      parameters:
        - default: 0
          description: The Unit type Id
          format: int32
          in: path
          name: unitTypeId
          required: true
          type: integer
        - default: 0
          description: The Device type Id
          format: int32
          in: path
          name: deviceTypeId
          required: true
          type: integer
        - default: 0
          description: The Input Type Id
          format: int32
          in: path
          name: inputTypeId
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/ConfigurationTemplateInputTypeDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Configuration not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - unittypes
      description: Request criteria is applicable.
      operationId: GetInputTypeConfigurations
      summary: Returns an array of Input Type configurations.
  '/api/unittypes/{unitTypeId}/configurations/{configurationId}':
    delete:
      parameters:
        - default: 0
          description: The Unit type Id
          format: int32
          in: path
          name: unitTypeId
          required: true
          type: integer
        - default: 0
          description: The ConfigurationId type Id
          format: int32
          in: path
          name: configurationId
          required: true
          type: integer
      responses:
        '200':
          description: OK
        '204':
          description: Configuration deleted successfully
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - unittypes
      operationId: DeleteUnitTypeConfiguration
      summary: Delete unit type configuration
  '/api/unittypes/{unitTypeId}/devicetypes':
    get:
      parameters:
        - default: 0
          description: The Unit type Id
          format: int32
          in: path
          name: unitTypeId
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/HierarchyUnitTypeDeviceTypeDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - unittypes
      description: Request criteria is applicable.
      operationId: GetUnitTypeDeviceTypesHierarchy
      summary: Returns a collection of UnitTypes Hierarchy of device types
  '/api/unittypes/{unitTypeId}/devicetypes/{deviceTypeId}':
    delete:
      parameters:
        - default: 0
          description: The Unit type Id
          format: int32
          in: path
          name: unitTypeId
          required: true
          type: integer
        - default: 0
          description: The DeviceTypeId  Id
          format: int32
          in: path
          name: deviceTypeId
          required: true
          type: integer
      responses:
        '200':
          description: OK
        '204':
          description: Hierarchy deleted successfully
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - unittypes
      operationId: DeleteUnitTypesHierarchy
      summary: Delete unit type hierarchy
    post:
      parameters:
        - default: 0
          description: The Unit type Id
          format: int32
          in: path
          name: unitTypeId
          required: true
          type: integer
        - default: 0
          description: The Device type Id
          format: int32
          in: path
          name: deviceTypeId
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/HierarchyUnitTypeDeviceTypeDTO'
        '204':
          description: Hierarchy created successfully
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - unittypes
      description: Request criteria is applicable.
      operationId: CreateUnitTypesHierarchy
      summary: Create a new Hierarchy
  '/api/unittypes/{unitTypeId}/devicetypes/{deviceTypeId}/configurations':
    get:
      parameters:
        - default: 0
          description: The Unit type Id
          format: int32
          in: path
          name: unitTypeId
          required: true
          type: integer
        - default: 0
          description: The Device type Id
          format: int32
          in: path
          name: deviceTypeId
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/ConfigurationTemplateDeviceTypeDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: Configuration not found for the given Id.
        '500':
          description: Unknown Error.
      tags:
        - unittypes
      description: Request criteria is applicable.
      operationId: GetDeviceTypeConfigurations
      summary: Returns an array of device type configurations.
    post:
      parameters:
        - default: 0
          description: The Unit type Id
          format: int32
          in: path
          name: unitTypeId
          required: true
          type: integer
        - default: 0
          description: The Device type Id
          format: int32
          in: path
          name: deviceTypeId
          required: true
          type: integer
        - description: A Configurations to create
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ConfigurationTemplateDeviceTypeDTO'
      responses:
        '200':
          description: No response was specified
          schema:
            items:
              $ref: '#/definitions/ConfigurationTemplateDeviceTypeDTO'
            type: array
        '201':
          description: Configurations created successfully
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - unittypes
      description: Request criteria is applicable.
      operationId: CreateDeviceTypeConfigurations
      summary: Create a new configuration
    put:
      parameters:
        - default: 0
          description: The Unit type Id
          format: int32
          in: path
          name: unitTypeId
          required: true
          type: integer
        - default: 0
          description: The Device type Id
          format: int32
          in: path
          name: deviceTypeId
          required: true
          type: integer
        - description: A Configurations to update
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ConfigurationTemplateDeviceTypeDTO'
      responses:
        '200':
          description: No response was specified
        '204':
          description: Configurations updated successfully
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - unittypes
      description: Request criteria is applicable.
      operationId: UpdateDeviceTypeConfigurations
      summary: Update the configurations
  '/api/unittypes/{unitTypeId}/devicetypes/{deviceTypeId}/configurations/{configurationId}':
    delete:
      parameters:
        - default: 0
          description: The Unit type Id
          format: int32
          in: path
          name: unitTypeId
          required: true
          type: integer
        - default: 0
          description: The Device type Id
          format: int32
          in: path
          name: deviceTypeId
          required: true
          type: integer
        - default: 0
          description: The ConfigurationId type Id
          format: int32
          in: path
          name: configurationId
          required: true
          type: integer
      responses:
        '200':
          description: OK
        '204':
          description: Configuration deleted successfully
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - unittypes
      operationId: DeleteDeviceTypesConfiguration
      summary: Delete device type configuration
  '/api/unittypes/{unitTypeId}/devicetypes/{deviceTypeId}/inputTypes/{inputTypeId}/configurations/{configurationId}':
    delete:
      parameters:
        - default: 0
          description: The Unit type Id
          format: int32
          in: path
          name: unitTypeId
          required: true
          type: integer
        - default: 0
          description: The Device type Id
          format: int32
          in: path
          name: deviceTypeId
          required: true
          type: integer
        - default: 0
          description: The Input Type Id
          format: int32
          in: path
          name: inputTypeId
          required: true
          type: integer
        - default: 0
          description: The ConfigurationId type Id
          format: int32
          in: path
          name: configurationId
          required: true
          type: integer
      responses:
        '200':
          description: OK
        '204':
          description: Configuration deleted successfully
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - unittypes
      operationId: DeleteInputTypeConfiguration
      summary: Delete Input Type configuration
  '/api/unittypes/{unitTypeId}/devicetypes/{DeviceTypeId}/inputtypes':
    get:
      parameters:
        - default: 0
          description: The Unit type Id
          format: int32
          in: path
          name: unitTypeId
          required: true
          type: integer
        - default: 0
          description: The Device type Id
          format: int32
          in: path
          name: DeviceTypeId
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/HierarchyUnitTypeDeviceTypeDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - unittypes
      description: Request criteria is applicable.
      operationId: GetUnitTypeDeviceTypeInputTypesHierarchy
      summary: Returns a collection of UnitTypes Hierarchy of device types
  '/api/unittypes/{unitTypeId}/devicetypes/{deviceTypeId}/inputtypes/{inputTypeId}':
    post:
      parameters:
        - default: 0
          description: The Unit type Id
          format: int32
          in: path
          name: unitTypeId
          required: true
          type: integer
        - default: 0
          description: The Device type Id
          format: int32
          in: path
          name: deviceTypeId
          required: true
          type: integer
        - default: 0
          description: The InputType Id
          format: int32
          in: path
          name: inputTypeId
          required: true
          type: integer
        - description: A Hierarchy to create
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/HierarchyUnitTypeDeviceTypeInputTypeDTO'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/HierarchyUnitTypeDeviceTypeInputTypeDTO'
        '204':
          description: Hierarchy created successfully
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - unittypes
      description: Request criteria is applicable.
      operationId: CreateDeviceTypesHierarchy
      summary: Create a new Hierarchy
  '/api/unittypes/{unitTypeId}/devicetypes/{DeviceTypeId}/inputtypes/{InputTypeId}/input/{Input}':
    get:
      parameters:
        - default: 0
          description: The Unit type Id
          format: int32
          in: path
          name: unitTypeId
          required: true
          type: integer
        - default: 0
          description: The Device type Id
          format: int32
          in: path
          name: DeviceTypeId
          required: true
          type: integer
        - default: 0
          description: The Input type Id
          format: int32
          in: path
          name: InputTypeId
          required: true
          type: integer
        - default: 0
          description: The Input
          format: int32
          in: path
          name: Input
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/HierarchyUnitTypeDeviceTypeDTO'
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - unittypes
      description: Request criteria is applicable.
      operationId: GetUnitTypeDeviceTypeInputTypeHierarchy
      summary: Returns a collection of UnitTypes Hierarchy of device types
    put:
      parameters:
        - default: 0
          description: The Unit type Id
          format: int32
          in: path
          name: unitTypeId
          required: true
          type: integer
        - default: 0
          description: The Device type Id
          format: int32
          in: path
          name: DeviceTypeId
          required: true
          type: integer
        - default: 0
          description: The InputType Id
          format: int32
          in: path
          name: InputTypeId
          required: true
          type: integer
        - default: 0
          description: The input
          format: int32
          in: path
          name: Input
          required: true
          type: integer
        - description: A Hierarchy to create
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/HierarchyUnitTypeDeviceTypeInputTypeDTO'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/HierarchyUnitTypeDeviceTypeInputTypeDTO'
        '204':
          description: Hierarchy updated successfully
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - unittypes
      description: Request criteria is applicable.
      operationId: UpdateDeviceTypesHierarchy
      summary: Updates the Hierarchy
  '/api/unittypes/{unitTypeId}/devicetypes/{deviceTypeId}/inputypes/{inputTypeId}/configurations':
    post:
      parameters:
        - default: 0
          description: The Unit type Id
          format: int32
          in: path
          name: unitTypeId
          required: true
          type: integer
        - default: 0
          description: The Device type Id
          format: int32
          in: path
          name: deviceTypeId
          required: true
          type: integer
        - default: 0
          description: The Input Type Id
          format: int32
          in: path
          name: inputTypeId
          required: true
          type: integer
        - description: A Configurations to create
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ConfigurationTemplateInputTypeDTO'
      responses:
        '200':
          description: No response was specified
          schema:
            items:
              $ref: '#/definitions/ConfigurationTemplateInputTypeDTO'
            type: array
        '201':
          description: Configurations created successfully
        '400':
          description: Invalid parameters
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - unittypes
      description: Request criteria is applicable.
      operationId: CreateInputTypeConfigurations
      summary: Create a new configuration
  '/api/unittypes{unitTypeId}/devicetypes/{deviceTypeId}/inputypes/{inputTypeId}':
    delete:
      parameters:
        - default: 0
          description: The Unit type Id
          format: int32
          in: path
          name: unitTypeId
          required: true
          type: integer
        - default: 0
          description: The DeviceTypeId  Id
          format: int32
          in: path
          name: deviceTypeId
          required: true
          type: integer
        - default: 0
          description: The Input Type  Id
          format: int32
          in: path
          name: inputTypeId
          required: true
          type: integer
      responses:
        '200':
          description: OK
        '204':
          description: Hierarchy deleted successfully
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - unittypes
      operationId: DeleteDeviceTypeHierarchy
      summary: Delete device type hierarchy
  /api/users:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/UserDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - users
      description: Request criteria is applicable.
      operationId: GetUsers
      summary: Returns a collection of users.
    post:
      parameters:
        - description: A user to create
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UserDTO'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/UserDTO'
        '201':
          description: User created successfully
        '400':
          description: If there are not valid property values.
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - users
      operationId: CreateUser
      summary: Creates a new user.
  /api/users/changepassword:
    post:
      parameters:
        - description: A change password
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ChangePasswordDTO'
      responses:
        '200':
          description: Password change successfully
        '400':
          description: If there are not valid property values.
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - users
      operationId: ChangeUserPassword
      summary: Changes the user password.
  /api/users/me:
    get:
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserDTO'
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - users
      operationId: GetCurrentUser
      summary: Gets the current user
  /api/users/me/tagtypes:
    get:
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/TagTypeDTO'
            type: array
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - users
      description: Request criteria is not applicable.
      operationId: GetUserTagTypes
      summary: >-
        Returns a collection of user tag types. (all types of tags which user
        has access, depending of sites associated)
  '/api/users/{email}/resetpassword':
    post:
      parameters:
        - description: The user email
          in: path
          name: email
          required: true
          type: string
      responses:
        '200':
          description: Password reset successfully
        '400':
          description: If there are not valid property values.
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '500':
          description: Unknown Error.
      tags:
        - users
      operationId: ResetUserPassword
      summary: Resets the user password.
  '/api/users/{id}':
    get:
      parameters:
        - default: 0
          description: The User Id
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserDTO'
        '400':
          description: 'The {id} is lower than 0.'
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: >-
            The user was not found for the given <id> or the profile level is
            lower than the logged user.
        '500':
          description: Unknown Error.
      tags:
        - users
      operationId: GetUser
      summary: Gets the details of the user
    put:
      parameters:
        - default: 0
          description: The user id
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: A user to update
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UserDTO'
      responses:
        '200':
          description: No response was specified
        '204':
          description: User updated successfully
        '400':
          description: 'The {id} is lower than 0.'
        '401':
          description: Authorization token missing or invalid.
        '403':
          description: You do not have sufficient permissions to access this method.
        '404':
          description: >-
            The user was not found for the given <id> or the profile level is
            lower than the logged user.
        '500':
          description: Unknown Error.
      tags:
        - users
      operationId: UpdateUser
      summary: Updates the details of the user
definitions:
  AggregationTypeDTO:
    properties:
      Code:
        type: string
      Description:
        type: string
      Id:
        format: int32
        type: integer
    required:
      - Id
  AlarmConditionDTO:
    properties:
      Code:
        type: string
      Description:
        type: string
      Id:
        format: int32
        type: integer
    required:
      - Id
  AlarmDTO:
    properties:
      Color:
        type: string
      Condition:
        $ref: '#/definitions/AlarmConditionDTO'
      ConditionId:
        format: int32
        type: integer
      ConfiguredAlarms:
        format: int32
        type: integer
      ConfiguredInEquipment:
        type: string
      Description:
        type: string
      EquipmentAlarm:
        type: boolean
      Group:
        $ref: '#/definitions/GroupDTO'
      GroupId:
        format: int32
        type: integer
      Id:
        format: int32
        type: integer
      NotificationMessages:
        format: int32
        type: integer
      Tag:
        $ref: '#/definitions/TagDTO'
      TagId:
        format: int32
        type: integer
      TagType:
        $ref: '#/definitions/TagTypeDTO'
      TagTypeId:
        format: int32
        type: integer
      TotalAlarms:
        format: int32
        type: integer
      User:
        $ref: '#/definitions/UserDTO'
      UserId:
        format: int32
        type: integer
    required:
      - ConditionId
      - ConfiguredAlarms
      - EquipmentAlarm
      - Id
      - LastChanged
      - TotalAlarms
      - Value
  AlarmFieldDTO:
    properties:
      Category:
        type: string
      Code:
        type: string
      Name:
        type: string
  AlarmMessageShortCodeDTO:
    properties:
      Code:
        type: string
      Id:
        format: int32
        type: integer
    required:
      - Id
  AlarmNotificationMessageDTO:
    properties:
      Alarm:
        $ref: '#/definitions/AlarmDTO'
      AlarmId:
        format: int32
        type: integer
      AlarmMessageTemplateId:
        format: int32
        type: integer
      AlarmOutputType:
        $ref: '#/definitions/AlarmOutputTypeDTO'
      AlarmOutputTypeId:
        format: int32
        type: integer
      AlarmSubscribers:
        items:
          $ref: '#/definitions/AlarmSubscriberDTO'
        type: array
      Description:
        type: string
      Id:
        format: int32
        type: integer
      Message:
        type: string
      MobileNetwork:
        $ref: '#/definitions/MobileNetworkDTO'
      NotifyResponsible:
        type: boolean
      Subject:
        type: string
      User:
        $ref: '#/definitions/UserDTO'
      UserId:
        format: int32
        type: integer
    required:
      - AlarmId
      - AlarmOutputTypeId
      - Id
      - NotifyResponsible
      - UserId
  AlarmOccurrenceDTO:
    properties:
      Alarm:
        $ref: '#/definitions/AlarmDTO'
      AlarmId:
        format: int32
        type: integer
      Description:
        type: string
      Id:
        format: int32
        type: integer
      InAlarm:
        type: boolean
      Tag:
        $ref: '#/definitions/TagDTO'
      TagId:
        format: int32
        type: integer
    required:
      - AlarmId
      - Id
      - InAlarm
      - TagId
      - TimeStamp
      - Value
  AlarmOutputTypeDTO:
    properties:
      Code:
        type: string
      Description:
        type: string
      Id:
        format: int32
        type: integer
    required:
      - Id
  AlarmSubscriberDTO:
    properties:
      AlarmOutputType:
        $ref: '#/definitions/AlarmOutputTypeDTO'
      AlarmOutputTypeId:
        format: int32
        type: integer
      Contacts:
        type: string
      Description:
        type: string
      Groups:
        items:
          $ref: '#/definitions/GroupDTO'
        type: array
      Id:
        format: int32
        type: integer
    required:
      - AlarmOutputTypeId
      - Id
  CalendarTypeDTO:
    properties:
      Code:
        type: string
      Description:
        type: string
      Id:
        format: int32
        type: integer
    required:
      - Id
  CalibrationCurveDTO:
    properties:
      CalibrationCurveTemplate:
        $ref: '#/definitions/CalibrationCurveTemplateDTO'
      CalibrationCurveTemplateId:
        format: int32
        type: integer
      Id:
        format: int32
        type: integer
      MeasurementUnit:
        $ref: '#/definitions/MeasurementUnitDTO'
      Points:
        items:
          $ref: '#/definitions/CalibrationCurvePointDTO'
        type: array
    required:
      - Id
  CalibrationCurvePointDTO:
    properties:
      Id:
        format: int64
        type: integer
    required:
      - Destination
      - Id
      - Source
  CalibrationCurveTemplateDTO:
    properties:
      Description:
        type: string
      Id:
        format: int32
        type: integer
      MeasurementPointType:
        $ref: '#/definitions/MeasurementPointTypeDTO'
      MeasurementPointTypeId:
        format: int32
        type: integer
      TagTypeGroup:
        $ref: '#/definitions/TagTypeGroupDTO'
    required:
      - Id
      - MeasurementPointTypeId
      - TagTypeGroupId
  ChangePasswordDTO:
    properties:
      Password:
        type: string
      Token:
        type: string
  CompanyDTO:
    properties:
      Groups:
        items:
          $ref: '#/definitions/GroupDTO'
        type: array
      Id:
        format: int32
        type: integer
      Name:
        type: string
      Users:
        items:
          $ref: '#/definitions/UserDTO'
        type: array
    required:
      - Id
  ConfigurationDeviceDTO:
    properties:
      ConfigurationTemplate:
        $ref: '#/definitions/ConfigurationTemplateDeviceTypeDTO'
      ConfigurationTemplateId:
        format: int32
        type: integer
      DeviceId:
        format: int32
        type: integer
      Id:
        format: int64
        type: integer
      TimestampAdded:
        format: date-time
        type: string
      TimestampConfig:
        format: date-time
        type: string
      UserId:
        format: int32
        type: integer
      Value:
        type: string
    required:
      - ConfigurationTemplateId
      - DeviceId
      - Id
      - TimestampAdded
  ConfigurationTagDTO:
    properties:
      ConfigurationTemplate:
        $ref: '#/definitions/ConfigurationTemplateInputTypeDTO'
      ConfigurationTemplateId:
        format: int32
        type: integer
      Id:
        format: int64
        type: integer
      TagId:
        format: int32
        type: integer
      TimestampAdded:
        format: date-time
        type: string
      TimestampConfig:
        format: date-time
        type: string
      UserId:
        format: int32
        type: integer
      Value:
        type: string
    required:
      - ConfigurationTemplateId
      - Id
      - TagId
      - TimestampAdded
  ConfigurationTemplateDeviceTypeDTO:
    properties:
      Code:
        type: string
      Dependencies:
        items:
          $ref: '#/definitions/MessageTypeDTO'
        type: array
      Description:
        type: string
      HierarchyUnitTypeDeviceTypeId:
        format: int32
        type: integer
      Id:
        format: int32
        type: integer
      IsProtocolConfiguration:
        type: boolean
      KeyType:
        $ref: '#/definitions/KeyTypeDTO'
      KeyTypeId:
        format: int32
        type: integer
      MessageType:
        $ref: '#/definitions/MessageTypeDTO'
      TimestampModified:
        format: date-time
        type: string
      UserId:
        format: int32
        type: integer
      ValidationRegEx:
        type: string
      Value:
        type: string
    required:
      - HierarchyUnitTypeDeviceTypeId
      - Id
      - IsProtocolConfiguration
      - KeyTypeId
      - TimestampModified
  ConfigurationTemplateInputTypeDTO:
    properties:
      Code:
        type: string
      Dependencies:
        items:
          $ref: '#/definitions/MessageTypeDTO'
        type: array
      Description:
        type: string
      HierarchyUnitTypeDeviceTypeInputTypeId:
        format: int32
        type: integer
      Id:
        format: int32
        type: integer
      IsProtocolConfiguration:
        type: boolean
      KeyType:
        $ref: '#/definitions/KeyTypeDTO'
      KeyTypeId:
        format: int32
        type: integer
      MessageType:
        $ref: '#/definitions/MessageTypeDTO'
      TimestampModified:
        format: date-time
        type: string
      UserId:
        format: int32
        type: integer
      ValidationRegEx:
        type: string
      Value:
        type: string
    required:
      - HierarchyUnitTypeDeviceTypeInputTypeId
      - Id
      - IsProtocolConfiguration
      - KeyTypeId
      - TimestampModified
  ConfigurationTemplateUnitTypeDTO:
    properties:
      Code:
        type: string
      Dependencies:
        items:
          $ref: '#/definitions/MessageTypeDTO'
        type: array
      Description:
        type: string
      Id:
        format: int32
        type: integer
      IsAutoSetup:
        type: boolean
      IsProtocolConfiguration:
        type: boolean
      IsToSupportAutoSetup:
        type: boolean
      KeyType:
        $ref: '#/definitions/KeyTypeDTO'
      KeyTypeId:
        format: int32
        type: integer
      MessageType:
        $ref: '#/definitions/MessageTypeDTO'
      TimestampModified:
        format: date-time
        type: string
      UnitTypeId:
        format: byte
        type: string
      UserId:
        format: int32
        type: integer
      ValidationRegEx:
        type: string
      Value:
        type: string
    required:
      - Id
      - IsAutoSetup
      - IsProtocolConfiguration
      - IsToSupportAutoSetup
      - KeyTypeId
      - TimestampModified
      - UnitTypeId
  ConfigurationUnitDTO:
    properties:
      ConfigurationTemplate:
        $ref: '#/definitions/ConfigurationTemplateUnitTypeDTO'
      ConfigurationTemplateId:
        format: int32
        type: integer
      Id:
        format: int64
        type: integer
      IsAutoSetup:
        type: boolean
      TimestampAdded:
        format: date-time
        type: string
      TimestampConfig:
        format: date-time
        type: string
      UnitId:
        format: int32
        type: integer
      UserId:
        format: int32
        type: integer
      Value:
        type: string
    required:
      - ConfigurationTemplateId
      - Id
      - IsAutoSetup
      - TimestampAdded
      - UnitId
  ConsumerTypeDTO:
    properties:
      Code:
        type: string
      Description:
        type: string
      Id:
        format: int32
        type: integer
    required:
      - Id
  CountryDTO:
    properties:
      Code:
        type: string
      Id:
        format: int32
        type: integer
      Name:
        type: string
    required:
      - Id
  CustomerDTO:
    properties:
      Groups:
        items:
          $ref: '#/definitions/GroupDTO'
        type: array
      Id:
        format: int32
        type: integer
      MeasurementUnits:
        items:
          $ref: '#/definitions/MeasurementUnitDTO'
        type: array
      Name:
        type: string
      SitesCount:
        format: int32
        type: integer
    required:
      - Id
      - SitesCount
  DataTimeSpanDTO:
    properties:
      Code:
        type: string
      Description:
        type: string
      Id:
        format: int32
        type: integer
    required:
      - Id
  DatabaseVersionDTO:
    properties:
      Version:
        format: int32
        type: integer
    required:
      - Version
  DatumDTO:
    properties:
      TagId:
        format: int64
        type: integer
    required:
      - TagId
      - TimeStamp
  Decimal: {}
  DeviceDTO:
    properties:
      ActiveFirmware:
        $ref: '#/definitions/FirmwareDTO'
      ActiveFirmwareId:
        format: int32
        type: integer
      Configurations:
        items:
          $ref: '#/definitions/ConfigurationDeviceDTO'
        type: array
      DeviceType:
        $ref: '#/definitions/DeviceTypeDTO'
      DeviceTypeId:
        format: int32
        type: integer
      HardwareId:
        type: string
      HardwareIdHash:
        type: string
      Id:
        format: int32
        type: integer
      Index:
        format: byte
        type: string
      Name:
        type: string
      Reference:
        type: string
      Tags:
        items:
          $ref: '#/definitions/TagDTO'
        type: array
      Unit:
        $ref: '#/definitions/UnitDTO'
      UnitId:
        format: int32
        type: integer
    required:
      - DeviceTypeId
      - Id
  DeviceStatusDTO:
    properties:
      Code:
        type: string
      Description:
        type: string
      Id:
        format: int32
        type: integer
    required:
      - Id
  DeviceTypeDTO:
    properties:
      Code:
        type: string
      Description:
        type: string
      DeviceTypeGroups:
        items:
          $ref: '#/definitions/DeviceTypeGroupDTO'
        type: array
      Firmwares:
        items:
          $ref: '#/definitions/FirmwareDTO'
        type: array
      Id:
        format: int32
        type: integer
      IsObsolete:
        type: boolean
      IsUnitExtension:
        type: boolean
      ReferenceERP:
        type: string
      RegExHardwareId:
        type: string
    required:
      - Id
      - IsObsolete
      - IsUnitExtension
  DeviceTypeGroupDTO:
    properties:
      Code:
        type: string
      Id:
        format: int32
        type: integer
    required:
      - Id
  ErrorCodeDTO:
    properties:
      Category:
        type: string
      Description:
        type: string
      Id:
        format: int32
        type: integer
    required:
      - Id
  FieldOperationDTO:
    properties:
      AssignedToUser:
        $ref: '#/definitions/UserDTO'
      AssignedToUserId:
        format: int32
        type: integer
      Company:
        $ref: '#/definitions/CompanyDTO'
      CompanyId:
        format: int32
        type: integer
      CreatedByUser:
        $ref: '#/definitions/UserDTO'
      CreatedByUserId:
        format: int32
        type: integer
      DateSchedule:
        format: date-time
        type: string
      ExecutedDate:
        format: date-time
        type: string
      FieldOperationStatus:
        $ref: '#/definitions/FieldOperationStatusDTO'
      FieldOperationStatusId:
        format: byte
        type: string
      FieldOperationType:
        $ref: '#/definitions/FieldOperationTypeDTO'
      FieldOperationTypeId:
        format: byte
        type: string
      History:
        items:
          $ref: '#/definitions/FieldOperationHistoryDTO'
        type: array
      Id:
        format: int32
        type: integer
      LatestFieldOperationHistory:
        $ref: '#/definitions/FieldOperationHistoryDTO'
      Material:
        items:
          $ref: '#/definitions/MaterialDTO'
        type: array
      MoreInformation:
        type: string
      Observations:
        type: string
      Photos:
        items:
          $ref: '#/definitions/FieldOperationPhotoDTO'
        type: array
      Site:
        $ref: '#/definitions/SiteDTO'
      UnitChanged:
        items:
          $ref: '#/definitions/UnitStatusHistoryDTO'
        type: array
    required:
      - CreatedByUserId
      - FieldOperationStatusId
      - FieldOperationTypeId
      - Id
  FieldOperationHistoryDTO:
    properties:
      FieldOperationId:
        format: int32
        type: integer
      FieldOperationStatus:
        $ref: '#/definitions/FieldOperationStatusDTO'
      FieldOperationStatusId:
        format: byte
        type: string
      Id:
        format: int32
        type: integer
      Timestamp:
        format: date-time
        type: string
      User:
        $ref: '#/definitions/UserDTO'
      UserId:
        format: int32
        type: integer
    required:
      - FieldOperationId
      - FieldOperationStatusId
      - Id
      - Timestamp
      - UserId
  FieldOperationPhotoDTO:
    properties:
      FieldOperationId:
        format: int32
        type: integer
      URL:
        type: string
    required:
      - FieldOperationId
  FieldOperationStatusDTO:
    properties:
      Code:
        type: string
      Description:
        type: string
      Id:
        format: byte
        type: string
    required:
      - Id
  FieldOperationTypeDTO:
    properties:
      Code:
        type: string
      Description:
        type: string
      Id:
        format: byte
        type: string
    required:
      - Id
  FieldOperationValidationStatsDTO:
    properties:
      Customer:
        $ref: '#/definitions/CustomerDTO'
      TotalFieldOperations:
        format: int64
        type: integer
      TotalFieldOperationsToValidate:
        format: int64
        type: integer
    required:
      - TotalFieldOperations
      - TotalFieldOperationsToValidate
  FirmwareDTO:
    properties:
      Code:
        type: string
      Description:
        type: string
      Id:
        format: int32
        type: integer
      TimestampAdded:
        format: date-time
        type: string
      TimestampUpdated:
        format: date-time
        type: string
      Version:
        type: string
    required:
      - Id
      - TimestampAdded
  GeographyPoint:
    properties:
      IsEmpty:
        type: boolean
      Latitude:
        format: double
        type: number
      Longitude:
        format: double
        type: number
      M:
        format: double
        type: number
      Z:
        format: double
        type: number
    required:
      - IsEmpty
      - Latitude
      - Longitude
  GroupDTO:
    properties:
      Companies:
        items:
          $ref: '#/definitions/CompanyDTO'
        type: array
      Customers:
        items:
          $ref: '#/definitions/CustomerDTO'
        type: array
      Id:
        format: int32
        type: integer
      Name:
        type: string
      Sites:
        items:
          $ref: '#/definitions/SiteDTO'
        type: array
      TotalSMSUnits:
        format: int32
        type: integer
      TotalTCPUnits:
        format: int32
        type: integer
    required:
      - Id
      - TotalSMSUnits
      - TotalTCPUnits
  HardwareHashAlgorithmDTO:
    properties:
      Code:
        type: string
      Description:
        type: string
      Id:
        format: byte
        type: string
    required:
      - Id
  HierarchyUnitTypeDeviceTypeDTO:
    properties:
      DeviceType:
        $ref: '#/definitions/DeviceTypeDTO'
      DeviceTypeId:
        format: int32
        type: integer
      HierarchyUnitTypeDeviceTypeInputType:
        items:
          $ref: '#/definitions/HierarchyUnitTypeDeviceTypeInputTypeDTO'
        type: array
      Id:
        format: int32
        type: integer
      UnitType:
        $ref: '#/definitions/UnitTypeDTO'
      UnitTypeId:
        format: byte
        type: string
    required:
      - DeviceTypeId
      - Id
      - UnitTypeId
  HierarchyUnitTypeDeviceTypeInputTypeDTO:
    properties:
      HierarchyUnitTypeDeviceTypeId:
        format: int32
        type: integer
      Id:
        format: int32
        type: integer
      Input:
        format: int32
        type: integer
      InputType:
        $ref: '#/definitions/InputTypeDTO'
      InputTypeId:
        format: int32
        type: integer
      IsDefault:
        type: boolean
      SensorTypes:
        items:
          $ref: '#/definitions/SensorTypeDTO'
        type: array
    required:
      - HierarchyUnitTypeDeviceTypeId
      - Id
      - Input
      - InputTypeId
      - IsDefault
  HttpFile:
    properties:
      ContentType:
        type: string
      Key:
        type: string
      Name:
        type: string
      Value:
        $ref: '#/definitions/Stream'
  ImpersonateDTO:
    properties:
      UserId:
        format: int32
        type: integer
    required:
      - UserId
  InputTypeDTO:
    properties:
      Code:
        type: string
      Description:
        type: string
      Id:
        format: int32
        type: integer
    required:
      - Id
  Int16: {}
  KeyTypeDTO:
    properties:
      Code:
        type: string
      DefaultRegEx:
        type: string
      Description:
        type: string
      Id:
        format: int32
        type: integer
    required:
      - Id
  LanguageDTO:
    properties:
      Code:
        type: string
      Id:
        format: int32
        type: integer
      Name:
        type: string
    required:
      - Id
  LoginDTO:
    properties:
      Email:
        type: string
      Password:
        type: string
  MaterialDTO:
    properties:
      Added:
        type: boolean
      FieldOperationId:
        format: int32
        type: integer
      Id:
        format: int32
        type: integer
      MaterialType:
        $ref: '#/definitions/MaterialTypeDTO'
      MaterialTypeId:
        format: int32
        type: integer
      SerialNumber:
        type: string
    required:
      - Added
      - FieldOperationId
      - Id
      - MaterialTypeId
  MaterialTypeDTO:
    properties:
      Id:
        format: int32
        type: integer
      IsObselete:
        type: boolean
      Name:
        type: string
      NeedSerial:
        type: boolean
      Reference:
        type: string
    required:
      - Id
      - IsObselete
      - NeedSerial
  MeasurementPointAttributeKeyDTO:
    properties:
      Code:
        type: string
      DefaultValue:
        type: string
      Description:
        type: string
      Id:
        format: int32
        type: integer
      KeyType:
        $ref: '#/definitions/KeyTypeDTO'
      KeyTypeId:
        format: int32
        type: integer
      Options:
        items:
          type: string
        type: array
      Query:
        type: string
      RegEx:
        type: string
    required:
      - Id
      - KeyTypeId
  MeasurementPointDTO:
    properties:
      DaysForReplenishment:
        format: int32
        type: integer
      Description:
        type: string
      Id:
        format: int32
        type: integer
      MeasurementPointStatus:
        $ref: '#/definitions/MeasurementPointStatusDTO'
      MeasurementPointStatusId:
        format: int32
        type: integer
      MeasurementPointType:
        $ref: '#/definitions/MeasurementPointTypeDTO'
      MeasurementPointTypeId:
        format: int32
        type: integer
      ReplenishmentStatus:
        type: string
      Site:
        $ref: '#/definitions/SiteDTO'
      SiteId:
        format: int32
        type: integer
      Tags:
        items:
          $ref: '#/definitions/TagDTO'
        type: array
      User:
        $ref: '#/definitions/UserDTO'
      UserId:
        format: int32
        type: integer
      consumerId:
        format: int64
        type: integer
    required:
      - Id
      - MeasurementPointTypeId
      - SiteId
      - UserId
  MeasurementPointStatusDTO:
    properties:
      Code:
        type: string
      Description:
        type: string
      Id:
        format: int32
        type: integer
    required:
      - Id
  MeasurementPointTypeDTO:
    properties:
      Code:
        type: string
      Description:
        type: string
      Id:
        format: int32
        type: integer
      MeasurementPointAttributeKeys:
        items:
          $ref: '#/definitions/MeasurementPointAttributeKeyDTO'
        type: array
    required:
      - Id
  MeasurementUnitCategoryDTO:
    properties:
      Code:
        type: string
      Description:
        type: string
      Id:
        format: int32
        type: integer
      MeasurementUnits:
        items:
          $ref: '#/definitions/MeasurementUnitDTO'
        type: array
      Profile:
        $ref: '#/definitions/ProfileDTO'
      ProfileId:
        format: byte
        type: string
    required:
      - Id
      - ProfileId
  MeasurementUnitDTO:
    properties:
      Code:
        type: string
      Description:
        type: string
      Id:
        format: int32
        type: integer
      MeasurementUnitCategory:
        $ref: '#/definitions/MeasurementUnitCategoryDTO'
      MeasurementUnitCategoryId:
        format: byte
        type: string
      SmallName:
        type: string
    required:
      - Id
      - MeasurementUnitCategoryId
  MessageDTO:
    properties:
      CommunicationService:
        type: string
      Content:
        type: string
      Direction:
        type: string
      IsProtocolCluster:
        type: boolean
      MessageMedium:
        $ref: '#/definitions/MessageMediumDTO'
      MessageStatus:
        $ref: '#/definitions/MessageStatusDTO'
      MessageStatusId:
        format: int32
        type: integer
      MessageType:
        $ref: '#/definitions/MessageTypeDTO'
      MessageTypeId:
        format: int32
        type: integer
      ProtocolMessageType:
        type: string
      RowKey:
        type: string
      ServerPhoneNumber:
        type: string
      ShortNumber:
        type: string
      Table:
        type: string
    required:
      - IsProtocolCluster
      - Timestamp
  MessageDataDeviceDTO:
    properties:
      Device:
        $ref: '#/definitions/DeviceDTO'
      DeviceId:
        format: int32
        type: integer
      Id:
        format: int64
        type: integer
      MessageType:
        $ref: '#/definitions/MessageTypeDTO'
      MessageTypeId:
        format: int32
        type: integer
      MessageVariable:
        $ref: '#/definitions/MessageVariableDTO'
      Unit:
        $ref: '#/definitions/UnitDTO'
      UnitId:
        format: int32
        type: integer
    required:
      - DeviceId
      - Id
      - MessageTypeId
      - MessageVariableId
      - Timestamp
      - UnitId
      - Value
  MessageMediumDTO:
    properties:
      Code:
        type: string
      Description:
        type: string
    required:
      - Id
  MessageReprocessCommand:
    properties:
      Date:
        format: date-time
        type: string
      HardwareIds:
        items:
          type: string
        type: array
      Roles:
        type: string
      Type:
        format: int32
        type: integer
    required:
      - Date
      - Type
  MessageStatusDTO:
    properties:
      Code:
        type: string
      Description:
        type: string
      Id:
        format: int32
        type: integer
    required:
      - Id
  MessageTypeDTO:
    properties:
      Code:
        type: string
      Description:
        type: string
      Id:
        format: int32
        type: integer
    required:
      - Id
  MessageVariableDTO:
    properties:
      Code:
        type: string
      Description:
        type: string
    required:
      - Id
  MobileNetworkDTO:
    properties:
      APN:
        type: string
      Id:
        format: int32
        type: integer
      MessageCenter:
        type: string
      Name:
        type: string
      Network:
        $ref: '#/definitions/NetworkDTO'
      NetworkId:
        format: int32
        type: integer
      Password:
        type: string
      ServerPhone:
        type: string
      SimCards:
        items:
          $ref: '#/definitions/SimCardDTO'
        type: array
      User:
        type: string
      numberOfSimCards:
        format: int32
        type: integer
    required:
      - Id
      - numberOfSimCards
  NetworkDTO:
    properties:
      Description:
        type: string
      Id:
        format: int32
        type: integer
      Index:
        format: int32
        type: integer
      Name:
        type: string
      ServiceInstance:
        $ref: '#/definitions/ServiceInstanceDTO'
      ServiceInstanceId:
        format: int32
        type: integer
    required:
      - Id
      - Index
      - ServiceInstanceId
  ProfileDTO:
    properties:
      Code:
        type: string
      Id:
        format: int32
        type: integer
      Level:
        format: int32
        type: integer
      Name:
        type: string
    required:
      - Id
      - Level
  ProtocolCommandDTO:
    properties:
      Content:
        type: string
      IsRaw:
        type: boolean
      ModemNumber:
        format: int32
        type: integer
      PhoneNumber:
        type: string
      Roles:
        type: string
      RowKey:
        type: string
      SendRole:
        type: string
      Serial:
        type: string
      Type:
        format: int32
        type: integer
    required:
      - IsRaw
      - ModemNumber
      - SendDate
      - Type
  RawDataDTO:
    properties:
      Instant:
        type: boolean
      LatestUserValidation:
        $ref: '#/definitions/UserValidationDTO'
      TagId:
        format: int32
        type: integer
      Valid:
        type: boolean
    required:
      - Instant
      - TagId
      - TimeStamp
      - Valid
  ReportElasticDTO:
    properties:
      Filter:
        type: string
      Id:
        format: int32
        type: integer
      Name:
        type: string
      ReportTemplate:
        $ref: '#/definitions/ReportTemplateDTO'
      ReportTemplateId:
        format: int32
        type: integer
      Sort:
        type: string
      TimeSpan:
        $ref: '#/definitions/DataTimeSpanDTO'
      TimeSpanId:
        format: int32
        type: integer
      User:
        $ref: '#/definitions/UserDTO'
      UserId:
        format: int32
        type: integer
    required:
      - Id
      - ReportTemplateId
      - TimeSpanId
      - Updated
      - UserId
  ReportElasticRowDTO:
    properties:
      ALARM_CONDITION:
        type: string
      ALARM_DAYS_IN_ALARM:
        format: int32
        type: integer
      ALARM_DESCRIPTION:
        type: string
      ALARM_OCCURENCE_NUMBER_OF_BOTTLES_REPLACED:
        format: double
        type: number
      ALARM_OCCURENCE_STATUS:
        type: string
      ALARM_OCCURENCE_VALUE:
        $ref: '#/definitions/ReportElasticRowObject'
      ALARM_OCCURENCE_VALUE_IN:
        $ref: '#/definitions/ReportElasticRowObject'
      ALARM_OCCURENCE_VALUE_OUT:
        $ref: '#/definitions/ReportElasticRowObject'
      ALARM_VALUE:
        $ref: '#/definitions/ReportElasticRowObject'
      COMPANY_NAME:
        type: string
      CUSTOMER_SETTING_MEASUREMENT_POINT_COLORS:
        type: string
      EVENT_END_VALUE:
        $ref: '#/definitions/ReportElasticRowObject'
      EVENT_START_VALUE:
        $ref: '#/definitions/ReportElasticRowObject'
      EVENT_TYPE:
        type: string
      EVENT_VALUE:
        $ref: '#/definitions/ReportElasticRowObject'
      EVENT_VALUE_1:
        $ref: '#/definitions/ReportElasticRowObject'
      FIELD_OPERATION_ACTION:
        type: string
      FIELD_OPERATION_ID:
        format: int32
        type: integer
      FIELD_OPERATION_REASON_IDENTIFIED_NAME:
        type: string
      FIELD_OPERATION_REASON_POSSIBLE_NAME:
        type: string
      FIELD_OPERATION_STATUS:
        type: string
      FIELD_OPERATION_SUPPORT_NAME:
        type: string
      FIELD_OPERATION_TECHNICIAN_NAME:
        type: string
      FIELD_OPERATION_TYPE:
        type: string
      MEASUREMENT_POINT_ALARM_STATUS:
        type: string
      MEASUREMENT_POINT_ALARM_STATUS_COLOR:
        type: string
      MEASUREMENT_POINT_ATTRIBUTE_AVG_CONSUMPTION_BASED_ON_NUMBER_OF_DAYS:
        $ref: '#/definitions/ReportElasticRowObject'
      MEASUREMENT_POINT_ATTRIBUTE_BOTTLES_NEED_REPLACEMENT:
        format: int32
        type: integer
      MEASUREMENT_POINT_ATTRIBUTE_BOTTLES_NUMBER_SIDE_A:
        format: double
        type: number
      MEASUREMENT_POINT_ATTRIBUTE_BOTTLES_NUMBER_SIDE_B:
        format: double
        type: number
      MEASUREMENT_POINT_ATTRIBUTE_BOTTLES_PRODUCT_TYPE:
        type: string
      MEASUREMENT_POINT_ATTRIBUTE_BOTTLE_CAPACITY:
        $ref: '#/definitions/ReportElasticRowObject'
      MEASUREMENT_POINT_ATTRIBUTE_CUSTOMER_REFERENCE:
        type: string
      MEASUREMENT_POINT_ATTRIBUTE_DELIVERY_MAX:
        $ref: '#/definitions/ReportElasticRowObject'
      MEASUREMENT_POINT_ATTRIBUTE_DELIVERY_MIN:
        $ref: '#/definitions/ReportElasticRowObject'
      MEASUREMENT_POINT_ATTRIBUTE_LIQUID_DENSITY:
        format: double
        type: number
      MEASUREMENT_POINT_ATTRIBUTE_REPLENISHMENT_FORECAST_VALUE:
        $ref: '#/definitions/ReportElasticRowObject'
      MEASUREMENT_POINT_ATTRIBUTE_REPLENISHMENT_STATUS_DAY_TO_CRITICAL:
        format: int32
        type: integer
      MEASUREMENT_POINT_ATTRIBUTE_REPLENISHMENT_STATUS_DAY_TO_WARNING:
        format: int32
        type: integer
      MEASUREMENT_POINT_ATTRIBUTE_TANK_CAPACITY:
        $ref: '#/definitions/ReportElasticRowObject'
      MEASUREMENT_POINT_ATTRIBUTE_TANK_FILL_CAPACITY:
        $ref: '#/definitions/ReportElasticRowObject'
      MEASUREMENT_POINT_ATTRIBUTE_TANK_NR_FABRIC:
        type: string
      MEASUREMENT_POINT_ATTRIBUTE_TANK_ULLAGE:
        $ref: '#/definitions/ReportElasticRowObject'
      MEASUREMENT_POINT_ATTRIBUTE_TANK_ULLAGE_DAY_0:
        $ref: '#/definitions/ReportElasticRowObject'
      MEASUREMENT_POINT_ATTRIBUTE_TANK_ULLAGE_DAY_1:
        $ref: '#/definitions/ReportElasticRowObject'
      MEASUREMENT_POINT_ATTRIBUTE_TANK_ULLAGE_DAY_2:
        $ref: '#/definitions/ReportElasticRowObject'
      MEASUREMENT_POINT_ATTRIBUTE_TANK_ULLAGE_DAY_3:
        $ref: '#/definitions/ReportElasticRowObject'
      MEASUREMENT_POINT_ATTRIBUTE_TANK_ULLAGE_DAY_4:
        $ref: '#/definitions/ReportElasticRowObject'
      MEASUREMENT_POINT_ATTRIBUTE_TANK_ULLAGE_DAY_5:
        $ref: '#/definitions/ReportElasticRowObject'
      MEASUREMENT_POINT_ATTRIBUTE_TANK_USAGE:
        $ref: '#/definitions/ReportElasticRowObject'
      MEASUREMENT_POINT_ATTRIBUTE_TANK_USAGE_DAY_0:
        $ref: '#/definitions/ReportElasticRowObject'
      MEASUREMENT_POINT_ATTRIBUTE_TANK_USAGE_DAY_1:
        $ref: '#/definitions/ReportElasticRowObject'
      MEASUREMENT_POINT_ATTRIBUTE_TANK_USAGE_DAY_2:
        $ref: '#/definitions/ReportElasticRowObject'
      MEASUREMENT_POINT_ATTRIBUTE_TANK_USAGE_DAY_3:
        $ref: '#/definitions/ReportElasticRowObject'
      MEASUREMENT_POINT_ATTRIBUTE_TANK_USAGE_DAY_4:
        $ref: '#/definitions/ReportElasticRowObject'
      MEASUREMENT_POINT_ATTRIBUTE_TANK_USAGE_DAY_5:
        $ref: '#/definitions/ReportElasticRowObject'
      MEASUREMENT_POINT_ATTRIBUTE_TOTAL_BOTTLES:
        format: int32
        type: integer
      MEASUREMENT_POINT_DAYS_TO_REPLENISHMENT:
        format: int32
        type: integer
      MEASUREMENT_POINT_DESCRIPTION:
        type: string
      MEASUREMENT_POINT_ID:
        format: int32
        type: integer
      MEASUREMENT_POINT_REPLENISHMENT_END_VALUE:
        $ref: '#/definitions/ReportElasticRowObject'
      MEASUREMENT_POINT_REPLENISHMENT_START_VALUE:
        $ref: '#/definitions/ReportElasticRowObject'
      MEASUREMENT_POINT_STATUS:
        type: string
      MEASUREMENT_POINT_TYPE:
        type: string
      MEASUREMENT_POINT_TYPE_CODE:
        type: string
      SITE_ADDRESS:
        type: string
      SITE_CITY:
        type: string
      SITE_COUNTRY:
        type: string
      SITE_CUSTOMER:
        type: string
      SITE_CUSTOMER_ID:
        format: int32
        type: integer
      SITE_CUSTOMER_REFERENCE:
        type: string
      SITE_GPS_COORDINATES:
        $ref: '#/definitions/GeographyPoint'
      SITE_ID:
        format: int32
        type: integer
      SITE_NAME:
        type: string
      SITE_PUBLIC_ID:
        type: string
      SITE_REGION:
        type: string
      SITE_RESPONSIBLE_EMAIL:
        type: string
      SITE_RESPONSIBLE_NAME:
        type: string
      SITE_RESPONSIBLE_PHONE:
        type: string
      SITE_STATUS:
        type: string
      SITE_TIMEZONE:
        type: string
      SITE_ZIP_CODE:
        type: string
      TAG_CONSUMPTION:
        $ref: '#/definitions/ReportElasticRowObject'
      TAG_CONSUMPTION_PERCENTAGE:
        $ref: '#/definitions/ReportElasticRowObject'
      TAG_ID:
        format: int32
        type: integer
      TAG_LAST_VALUE:
        $ref: '#/definitions/ReportElasticRowObject'
      TAG_LAST_VALUE_COLOR:
        type: string
      TAG_LAST_VALUE_DAY_0:
        $ref: '#/definitions/ReportElasticRowObject'
      TAG_LAST_VALUE_DAY_1:
        $ref: '#/definitions/ReportElasticRowObject'
      TAG_LAST_VALUE_DAY_2:
        $ref: '#/definitions/ReportElasticRowObject'
      TAG_LAST_VALUE_DAY_3:
        $ref: '#/definitions/ReportElasticRowObject'
      TAG_LAST_VALUE_DAY_4:
        $ref: '#/definitions/ReportElasticRowObject'
      TAG_LAST_VALUE_DAY_5:
        $ref: '#/definitions/ReportElasticRowObject'
      TAG_MAX_VALUE:
        format: double
        type: number
      TAG_MIN_VALUE:
        format: double
        type: number
      TAG_NAME:
        type: string
      TAG_TYPE:
        type: string
    required:
      - SITE_CUSTOMER_ID
  ReportElasticRowObject:
    properties:
      Unit:
        type: string
      Value:
        format: double
        type: number
  ReportFieldDTO:
    properties:
      Category:
        type: string
      Code:
        type: string
      Name:
        type: string
  ReportRowDTO:
    properties:
      SiteId:
        format: int32
        type: integer
  ReportTemplateDTO:
    properties:
      CalendarType:
        $ref: '#/definitions/CalendarTypeDTO'
      CalendarTypeId:
        format: int32
        type: integer
      Code:
        type: string
      Description:
        type: string
      Filter:
        type: string
      Groups:
        items:
          $ref: '#/definitions/GroupDTO'
        type: array
      Id:
        format: int32
        type: integer
      Sort:
        type: string
      TimeSpan:
        $ref: '#/definitions/DataTimeSpanDTO'
      TimeSpanId:
        format: int32
        type: integer
      Type:
        $ref: '#/definitions/ReportTypeDTO'
      TypeId:
        format: int32
        type: integer
    required:
      - CalendarTypeId
      - Id
      - TimeSpanId
      - TypeId
      - Updated
  ReportTypeDTO:
    properties:
      Code:
        type: string
      Description:
        type: string
      Id:
        format: int32
        type: integer
      Index:
        type: string
    required:
      - Id
  ScheduleNotificationDTO:
    properties:
      Active:
        type: boolean
      Cron:
        type: string
      Description:
        type: string
      Group:
        $ref: '#/definitions/GroupDTO'
      GroupId:
        format: int32
        type: integer
      Id:
        format: int32
        type: integer
      NotificationTemplate:
        $ref: '#/definitions/ScheduleNotificationTemplateDTO'
      NotificationTemplateId:
        format: int32
        type: integer
      Site:
        $ref: '#/definitions/SiteDTO'
      SiteId:
        format: int32
        type: integer
      TotalSites:
        format: int32
        type: integer
    required:
      - Active
      - Id
      - NotificationTemplateId
      - TotalSites
  ScheduleNotificationTemplateDTO:
    properties:
      DefaultLanguage:
        $ref: '#/definitions/LanguageDTO'
      DefaultLanguageId:
        format: byte
        type: string
      Groups:
        items:
          $ref: '#/definitions/GroupDTO'
        type: array
      Id:
        format: int32
        type: integer
      NotificationType:
        $ref: '#/definitions/ScheduleNotificationTypeDTO'
      NotificationTypeId:
        format: byte
        type: string
    required:
      - DefaultLanguageId
      - Id
      - NotificationTypeId
  ScheduleNotificationTypeDTO:
    properties:
      Code:
        type: string
      Description:
        type: string
      Id:
        format: int32
        type: integer
    required:
      - Id
  SensorTypeDTO:
    properties:
      Code:
        type: string
      ConfigChar:
        type: string
      Description:
        type: string
      Id:
        format: int32
        type: integer
      MaximumValue:
        format: int32
        type: integer
      MinimumValue:
        format: int32
        type: integer
      TagTypes:
        items:
          $ref: '#/definitions/TagTypeDTO'
        type: array
    required:
      - Id
      - MaximumValue
      - MinimumValue
  ServiceConfigurationDTO:
    properties:
      Code:
        type: string
      DefaultValue:
        type: string
      Description:
        type: string
      Id:
        format: int32
        type: integer
      KeyTypeId:
        format: int32
        type: integer
      ServiceId:
        format: int32
        type: integer
      ValidationRegex:
        type: string
    required:
      - Id
      - KeyTypeId
      - ServiceId
  ServiceDTO:
    properties:
      Configurations:
        items:
          $ref: '#/definitions/ServiceConfigurationDTO'
        type: array
      Description:
        type: string
      Id:
        format: int32
        type: integer
      Name:
        type: string
      Role:
        type: string
      ServiceInstances:
        items:
          $ref: '#/definitions/ServiceInstanceDTO'
        type: array
    required:
      - Id
  ServiceInstanceConfigurationDTO:
    properties:
      Code:
        type: string
      DefaultValue:
        type: string
      Description:
        type: string
      Id:
        format: int32
        type: integer
      KeyTypeId:
        format: int32
        type: integer
      ServiceInstanceId:
        format: int32
        type: integer
      ValidationRegex:
        type: string
    required:
      - Id
      - KeyTypeId
      - ServiceInstanceId
  ServiceInstanceDTO:
    properties:
      Configurations:
        items:
          $ref: '#/definitions/ServiceInstanceConfigurationDTO'
        type: array
      Id:
        format: int32
        type: integer
      MessageMedium:
        $ref: '#/definitions/MessageMediumDTO'
      Name:
        type: string
      Networks:
        items:
          $ref: '#/definitions/NetworkDTO'
        type: array
      Role:
        type: string
      ServiceId:
        format: int32
        type: integer
      ServiceState:
        format: int32
        type: integer
    required:
      - Id
      - ServiceId
      - ServiceState
  ServiceTypeDTO:
    properties:
      Code:
        type: string
      Description:
        type: string
      Id:
        format: int32
        type: integer
    required:
      - Id
  SessionDTO:
    properties:
      RefreshToken:
        type: string
      Timeout:
        format: int64
        type: integer
      Token:
        type: string
    required:
      - Timeout
  SettingCategoryDTO:
    properties:
      Code:
        type: string
      Description:
        type: string
      Id:
        format: int32
        type: integer
      Settings:
        items:
          $ref: '#/definitions/SettingDTO'
        type: array
    required:
      - Id
  SettingDTO:
    properties:
      Code:
        type: string
      Description:
        type: string
      Id:
        format: int32
        type: integer
      KeyType:
        $ref: '#/definitions/KeyTypeDTO'
      KeyTypeId:
        format: int32
        type: integer
      Profile:
        $ref: '#/definitions/ProfileDTO'
      ProfileId:
        format: byte
        type: string
      SettingCategory:
        $ref: '#/definitions/SettingCategoryDTO'
      SettingCategoryId:
        format: byte
        type: string
      ValidationRegEx:
        type: string
    required:
      - Id
      - KeyTypeId
      - ProfileId
      - SettingCategoryId
  SimCardDTO:
    properties:
      Id:
        format: int32
        type: integer
      MobileNetwork:
        $ref: '#/definitions/MobileNetworkDTO'
      Number:
        type: string
      ShortNumber:
        type: string
      SimCardStatus:
        $ref: '#/definitions/SimCardStatusDTO'
      SimCardStatusId:
        format: byte
        type: string
      Timestamp:
        format: date-time
        type: string
      Unit:
        $ref: '#/definitions/UnitDTO'
      UnitId:
        format: int32
        type: integer
    required:
      - Id
      - SimCardStatusId
      - Timestamp
  SimCardStatusDTO:
    properties:
      Code:
        type: string
      Description:
        type: string
      Id:
        format: byte
        type: string
    required:
      - Id
  SiteDTO:
    properties:
      Address:
        type: string
      City:
        type: string
      Country:
        $ref: '#/definitions/CountryDTO'
      CountryId:
        format: int32
        type: integer
      CreateFieldOperation:
        type: boolean
      CreateMeasurementPoint:
        type: boolean
      Customer:
        $ref: '#/definitions/CustomerDTO'
      CustomerId:
        format: int32
        type: integer
      Deleted:
        type: boolean
      ExternalReference:
        type: string
      Groups:
        items:
          $ref: '#/definitions/GroupDTO'
        type: array
      Id:
        format: int32
        type: integer
      LatestSiteStatusHistory:
        $ref: '#/definitions/SiteStatusHistoryDTO'
      MeasurementPoints:
        items:
          $ref: '#/definitions/MeasurementPointDTO'
        type: array
      Name:
        type: string
      Observations:
        type: string
      PublicId:
        type: string
      Region:
        type: string
      SiteStatus:
        $ref: '#/definitions/SiteStatusDTO'
      SiteStatusId:
        format: byte
        type: string
      TimeZoneId:
        type: string
      Units:
        items:
          $ref: '#/definitions/UnitDTO'
        type: array
      Users:
        items:
          $ref: '#/definitions/UserDTO'
        type: array
      ZipCode:
        type: string
    required:
      - CountryId
      - CreateFieldOperation
      - CreateMeasurementPoint
      - CustomerId
      - Deleted
      - Id
  SiteFieldDTO:
    properties:
      Code:
        type: string
      Name:
        type: string
  SiteMapDTO:
    properties:
      SiteId:
        format: int32
        type: integer
      SiteName:
        type: string
    required:
      - SiteId
  SiteStatusDTO:
    properties:
      Code:
        type: string
      Id:
        format: int32
        type: integer
      Name:
        type: string
    required:
      - Id
  SiteStatusHistoryDTO:
    properties:
      FieldOperation:
        $ref: '#/definitions/FieldOperationDTO'
      FieldOperationId:
        format: int32
        type: integer
      Id:
        format: int32
        type: integer
      NewObservation:
        type: string
      Observations:
        items:
          $ref: '#/definitions/SiteStatusHistoryObservationDTO'
        type: array
      SiteId:
        format: int32
        type: integer
      SiteStatus:
        $ref: '#/definitions/SiteStatusDTO'
      SiteStatusId:
        format: byte
        type: string
      TransitionDate:
        format: date-time
        type: string
      User:
        $ref: '#/definitions/UserDTO'
      UserId:
        format: int32
        type: integer
    required:
      - Id
      - SiteId
      - SiteStatusId
      - TransitionDate
      - UserId
  SiteStatusHistoryObservationDTO:
    properties:
      Description:
        type: string
      Id:
        format: int32
        type: integer
      SiteStatusHistoryId:
        format: int32
        type: integer
      Timestamp:
        format: date-time
        type: string
      User:
        $ref: '#/definitions/UserDTO'
      UserId:
        format: int32
        type: integer
    required:
      - Id
      - SiteStatusHistoryId
      - Timestamp
      - UserId
  SiteStatusStatsDTO:
    properties:
      Customer:
        $ref: '#/definitions/CustomerDTO'
      TotalSites:
        format: int32
        type: integer
      TotalSitesInStatus:
        format: int32
        type: integer
    required:
      - TotalSites
      - TotalSitesInStatus
  StatsRowObject:
    properties:
      Unit:
        type: string
      Value:
        format: double
        type: number
  Stream:
    properties:
      CanRead:
        type: boolean
      CanSeek:
        type: boolean
      CanTimeout:
        type: boolean
      CanWrite:
        type: boolean
      Length:
        format: int64
        type: integer
      Position:
        format: int64
        type: integer
      ReadTimeout:
        format: int32
        type: integer
      WriteTimeout:
        format: int32
        type: integer
    required:
      - CanRead
      - CanSeek
      - CanTimeout
      - CanWrite
      - Length
      - Position
      - ReadTimeout
      - WriteTimeout
  TagDTO:
    properties:
      AlarmsColors:
        items:
          $ref: '#/definitions/AlarmDTO'
        type: array
      CalibrationCurve:
        $ref: '#/definitions/CalibrationCurveDTO'
      Channel:
        format: int32
        type: integer
      Configurations:
        items:
          $ref: '#/definitions/ConfigurationTagDTO'
        type: array
      Device:
        $ref: '#/definitions/DeviceDTO'
      DeviceId:
        format: int32
        type: integer
      HardwareSubIndex:
        format: int32
        type: integer
      Id:
        format: int32
        type: integer
      InputType:
        $ref: '#/definitions/InputTypeDTO'
      InputTypeId:
        format: int32
        type: integer
      MeasurementPoint:
        $ref: '#/definitions/MeasurementPointDTO'
      MeasurementPointId:
        format: int32
        type: integer
      MeasurementUnit:
        type: string
      Name:
        type: string
      SensorType:
        $ref: '#/definitions/SensorTypeDTO'
      SensorTypeId:
        format: int32
        type: integer
      Status:
        $ref: '#/definitions/TagStatusDTO'
      TagStatusId:
        format: int32
        type: integer
      TagType:
        $ref: '#/definitions/TagTypeDTO'
      TagTypeId:
        format: int32
        type: integer
    required:
      - HardwareSubIndex
      - Id
      - InputTypeId
      - SensorTypeId
      - TagStatusId
      - TagTypeId
  TagMissingDataStatsDTO:
    properties:
      Customer:
        $ref: '#/definitions/CustomerDTO'
      TotalTags:
        format: int32
        type: integer
      TotalTagsInMissingData:
        format: int32
        type: integer
    required:
      - TotalTags
      - TotalTagsInMissingData
  TagStatusDTO:
    properties:
      Code:
        type: string
      Description:
        type: string
      Id:
        format: int32
        type: integer
    required:
      - Id
  TagTypeDTO:
    properties:
      Code:
        type: string
      Description:
        type: string
      Id:
        format: int32
        type: integer
      MeasurementUnit:
        $ref: '#/definitions/MeasurementUnitDTO'
      TagTypeGroups:
        items:
          $ref: '#/definitions/TagTypeGroupDTO'
        type: array
    required:
      - Id
      - MeasurementUnitId
  TagTypeGroupDTO:
    properties:
      Code:
        type: string
      Description:
        type: string
      Id:
        format: int32
        type: integer
    required:
      - Id
  TagsDetailsStatsDTO:
    properties:
      MEASUREMENT_POINT_ATTRIBUTE_TANK_CAPACITY:
        $ref: '#/definitions/StatsRowObject'
      MEASUREMENT_POINT_ATTRIBUTE_TANK_FILL_CAPACITY:
        $ref: '#/definitions/StatsRowObject'
      MEASUREMENT_POINT_ATTRIBUTE_TANK_ULLAGE:
        $ref: '#/definitions/StatsRowObject'
      MEASUREMENT_POINT_ATTRIBUTE_TANK_USAGE:
        $ref: '#/definitions/StatsRowObject'
      MEASUREMENT_POINT_DESCRIPTION:
        type: string
      MEASUREMENT_POINT_ID:
        format: int32
        type: integer
      SITE_ID:
        format: int32
        type: integer
      SITE_NAME:
        type: string
      TAG_ID:
        format: int32
        type: integer
      TAG_LAST_VALUE:
        $ref: '#/definitions/StatsRowObject'
      TAG_LAST_VALUE_COLOR:
        type: string
      TAG_MAX_VALUE:
        format: double
        type: number
      TAG_MIN_VALUE:
        format: double
        type: number
      TAG_NAME:
        type: string
  TimeSpan:
    properties:
      Days:
        format: int32
        type: integer
      Hours:
        format: int32
        type: integer
      Milliseconds:
        format: int32
        type: integer
      Minutes:
        format: int32
        type: integer
      Seconds:
        format: int32
        type: integer
      Ticks:
        format: int64
        type: integer
      TotalDays:
        format: double
        type: number
      TotalHours:
        format: double
        type: number
      TotalMilliseconds:
        format: double
        type: number
      TotalMinutes:
        format: double
        type: number
      TotalSeconds:
        format: double
        type: number
    required:
      - Days
      - Hours
      - Milliseconds
      - Minutes
      - Seconds
      - Ticks
      - TotalDays
      - TotalHours
      - TotalMilliseconds
      - TotalMinutes
      - TotalSeconds
  TimezoneDTO:
    properties:
      BaseUtcOffset:
        $ref: '#/definitions/TimeSpan'
      Description:
        type: string
      Id:
        type: string
    required:
      - BaseUtcOffset
  UnitDTO:
    properties:
      ActiveFirmware:
        $ref: '#/definitions/FirmwareDTO'
      ActiveFirmwareId:
        format: int32
        type: integer
      Configurations:
        items:
          $ref: '#/definitions/ConfigurationUnitDTO'
        type: array
      Deleted:
        type: boolean
      Devices:
        items:
          $ref: '#/definitions/DeviceDTO'
        type: array
      HardwareId:
        type: string
      HardwareIdHash:
        type: string
      Id:
        format: int32
        type: integer
      LatestUnitStatusHistory:
        $ref: '#/definitions/UnitStatusHistoryDTO'
      Name:
        type: string
      Reference:
        type: string
      SimCard:
        $ref: '#/definitions/SimCardDTO'
      SimCardId:
        format: int32
        type: integer
      Site:
        $ref: '#/definitions/SiteDTO'
      SiteId:
        format: int32
        type: integer
      UnitType:
        $ref: '#/definitions/UnitTypeDTO'
      UnitTypeId:
        format: byte
        type: string
      WarrantyExpiration:
        format: date-time
        type: string
    required:
      - Deleted
      - Id
      - UnitTypeId
  UnitLowBatteryStatsDTO:
    properties:
      Customer:
        $ref: '#/definitions/CustomerDTO'
      TotalUnits:
        format: int32
        type: integer
      TotalUnitsInLowBattery:
        format: int32
        type: integer
    required:
      - TotalUnits
      - TotalUnitsInLowBattery
  UnitMissingCommunicationStatsDTO:
    properties:
      Customer:
        $ref: '#/definitions/CustomerDTO'
      TotalUnits:
        format: int32
        type: integer
      TotalUnitsInMissingCommunication:
        format: int32
        type: integer
    required:
      - TotalUnits
      - TotalUnitsInMissingCommunication
  UnitProtocolDTO:
    properties:
      Code:
        type: string
      Description:
        type: string
      Id:
        format: int32
        type: integer
    required:
      - Id
  UnitStatsDTO:
    properties:
      TotalMissingCommunication:
        format: int32
        type: integer
      Unit:
        $ref: '#/definitions/UnitDTO'
  UnitStatusDTO:
    properties:
      Code:
        type: string
      Description:
        type: string
      Id:
        format: byte
        type: string
    required:
      - Id
  UnitStatusHistoryDTO:
    properties:
      Id:
        format: int32
        type: integer
      Observation:
        type: string
      Timestamp:
        format: date-time
        type: string
      Unit:
        $ref: '#/definitions/UnitDTO'
      UnitId:
        format: int32
        type: integer
      UnitStatus:
        $ref: '#/definitions/UnitStatusDTO'
      UnitStatusId:
        format: byte
        type: string
      User:
        $ref: '#/definitions/UserDTO'
      UserId:
        format: int32
        type: integer
    required:
      - Id
      - Timestamp
      - UnitId
      - UnitStatusId
      - UserId
  UnitTypeDTO:
    properties:
      Code:
        type: string
      ConfigurationTemplates:
        items:
          $ref: '#/definitions/ConfigurationTemplateUnitTypeDTO'
        type: array
      Description:
        type: string
      Firmwares:
        items:
          $ref: '#/definitions/FirmwareDTO'
        type: array
      HardwareIdRegEx:
        type: string
      HashAlgorithm:
        $ref: '#/definitions/HardwareHashAlgorithmDTO'
      HashAlgorithmId:
        format: byte
        type: string
      Id:
        format: int32
        type: integer
      Protocol:
        $ref: '#/definitions/UnitProtocolDTO'
      ProtocolId:
        format: byte
        type: string
    required:
      - Id
  UnvalidatedTagStatsDTO:
    properties:
      Customer:
        $ref: '#/definitions/CustomerDTO'
      TotalTags:
        format: int32
        type: integer
      TotalTagsToValidate:
        format: int32
        type: integer
    required:
      - TotalTags
      - TotalTagsToValidate
  UserDTO:
    properties:
      Active:
        type: boolean
      Company:
        $ref: '#/definitions/CompanyDTO'
      CompanyId:
        format: int32
        type: integer
      Email:
        type: string
      Groups:
        items:
          $ref: '#/definitions/GroupDTO'
        type: array
      Id:
        format: int32
        type: integer
      Language:
        $ref: '#/definitions/LanguageDTO'
      LanguageId:
        format: byte
        type: string
      Name:
        type: string
      Observations:
        type: string
      Password:
        type: string
      Phone:
        type: string
      Profile:
        $ref: '#/definitions/ProfileDTO'
      ProfileId:
        format: byte
        type: string
    required:
      - Id
      - LanguageId
      - ProfileId
  UserValidationDTO:
    properties:
      User:
        $ref: '#/definitions/UserDTO'
      UserId:
        format: int32
        type: integer
    required:
      - TimeStamp
      - TimeStampValidated
      - UserId
  ValidatedTagStatsDTO:
    properties:
      Customer:
        $ref: '#/definitions/CustomerDTO'
      TotalTags:
        format: int32
        type: integer
      TotalTagsValidated:
        format: int32
        type: integer
    required:
      - TotalTags
      - TotalTagsValidated
  ValidationStatsDTO:
    properties:
      Customer:
        $ref: '#/definitions/CustomerDTO'
      TotalTags:
        format: int32
        type: integer
      TotalTagsDoItLater:
        format: int32
        type: integer
      TotalTagsToValidate:
        format: int32
        type: integer
      TotalTagsWaitingCommunication:
        format: int32
        type: integer
    required:
      - TotalTags
      - TotalTagsDoItLater
      - TotalTagsToValidate
      - TotalTagsWaitingCommunication
  UserSetting:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      value:
        type: "string"
      setting:
         $ref: '#/definitions/SettingDTO'
      userId:
        type: "integer"
      settingId:
        type: "integer"
tags:
  - name: aggregationtypes
  - name: alarms
  - name: commands
  - name: companies
  - name: consumers
  - name: countries
  - name: customers
  - name: datum
  - name: decode
  - name: devices
  - name: devicetypes
  - name: errorcodes
  - name: fieldoperations
  - name: groups
  - name: inputtypes
  - name: keytypes
  - name: languages
  - name: materials
  - name: measurementpointattributekeys
  - name: measurementpointstatus
  - name: measurementpointtypes
  - name: measurementunits
  - name: messagedata
  - name: messagemedium
  - name: messages
  - name: messagestatus
  - name: messagetypes
  - name: messagevariables
  - name: mobilenetworks
  - name: networks
  - name: profiles
  - name: reportelastics
  - name: reports
  - name: schedulenotifications
  - name: schedulenotificationtemplates
  - name: schedulenotificationtypes
  - name: sensortypes
  - name: services
  - name: sessions
  - name: simcards
  - name: sites
  - name: sites/maps
  - name: stats
  - name: tags
  - name: tagtypes
  - name: timezones
  - name: units
  - name: unittypes
  - name: users
  - name: settings

